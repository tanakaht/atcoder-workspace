<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1350" onload="init(evt)" viewBox="0 0 1200 1350" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1350" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="1333.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="1333.00"> </text><svg id="frames" x="10" width="1180" total_samples="2228"><g><title>ahc032_a::Input::read_input (1 samples, 0.04%)</title><rect x="0.0000%" y="997" width="0.0449%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1007.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.04%)</title><rect x="0.0000%" y="981" width="0.0449%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="1"/><text x="0.2500%" y="991.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.04%)</title><rect x="0.0000%" y="965" width="0.0449%" height="15" fill="rgb(221,193,54)" fg:x="0" fg:w="1"/><text x="0.2500%" y="975.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.04%)</title><rect x="0.0000%" y="949" width="0.0449%" height="15" fill="rgb(248,212,6)" fg:x="0" fg:w="1"/><text x="0.2500%" y="959.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.04%)</title><rect x="0.0000%" y="933" width="0.0449%" height="15" fill="rgb(208,68,35)" fg:x="0" fg:w="1"/><text x="0.2500%" y="943.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.04%)</title><rect x="0.0000%" y="917" width="0.0449%" height="15" fill="rgb(232,128,0)" fg:x="0" fg:w="1"/><text x="0.2500%" y="927.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.04%)</title><rect x="0.0000%" y="901" width="0.0449%" height="15" fill="rgb(207,160,47)" fg:x="0" fg:w="1"/><text x="0.2500%" y="911.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.04%)</title><rect x="0.0000%" y="885" width="0.0449%" height="15" fill="rgb(228,23,34)" fg:x="0" fg:w="1"/><text x="0.2500%" y="895.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.04%)</title><rect x="0.0000%" y="869" width="0.0449%" height="15" fill="rgb(218,30,26)" fg:x="0" fg:w="1"/><text x="0.2500%" y="879.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.04%)</title><rect x="0.0000%" y="853" width="0.0449%" height="15" fill="rgb(220,122,19)" fg:x="0" fg:w="1"/><text x="0.2500%" y="863.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.04%)</title><rect x="0.0000%" y="837" width="0.0449%" height="15" fill="rgb(250,228,42)" fg:x="0" fg:w="1"/><text x="0.2500%" y="847.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.04%)</title><rect x="0.0000%" y="821" width="0.0449%" height="15" fill="rgb(240,193,28)" fg:x="0" fg:w="1"/><text x="0.2500%" y="831.50"></text></g><g><title>malloc (1 samples, 0.04%)</title><rect x="0.0000%" y="805" width="0.0449%" height="15" fill="rgb(216,20,37)" fg:x="0" fg:w="1"/><text x="0.2500%" y="815.50"></text></g><g><title>[libc.so.6] (1 samples, 0.04%)</title><rect x="0.0000%" y="789" width="0.0449%" height="15" fill="rgb(206,188,39)" fg:x="0" fg:w="1"/><text x="0.2500%" y="799.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.04%)</title><rect x="0.0449%" y="965" width="0.0449%" height="15" fill="rgb(217,207,13)" fg:x="1" fg:w="1"/><text x="0.2949%" y="975.50"></text></g><g><title>alloc::rc::RcInnerPtr::inc_strong (1 samples, 0.04%)</title><rect x="0.0449%" y="949" width="0.0449%" height="15" fill="rgb(231,73,38)" fg:x="1" fg:w="1"/><text x="0.2949%" y="959.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (1 samples, 0.04%)</title><rect x="0.0449%" y="933" width="0.0449%" height="15" fill="rgb(225,20,46)" fg:x="1" fg:w="1"/><text x="0.2949%" y="943.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (1 samples, 0.04%)</title><rect x="0.0449%" y="917" width="0.0449%" height="15" fill="rgb(210,31,41)" fg:x="1" fg:w="1"/><text x="0.2949%" y="927.50"></text></g><g><title>core::mem::replace (1 samples, 0.04%)</title><rect x="0.0449%" y="901" width="0.0449%" height="15" fill="rgb(221,200,47)" fg:x="1" fg:w="1"/><text x="0.2949%" y="911.50"></text></g><g><title>core::ptr::write (1 samples, 0.04%)</title><rect x="0.0449%" y="885" width="0.0449%" height="15" fill="rgb(226,26,5)" fg:x="1" fg:w="1"/><text x="0.2949%" y="895.50"></text></g><g><title>ahc032_a::State::get_neighbor (1 samples, 0.04%)</title><rect x="0.0898%" y="917" width="0.0449%" height="15" fill="rgb(249,33,26)" fg:x="2" fg:w="1"/><text x="0.3398%" y="927.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.04%)</title><rect x="0.0898%" y="901" width="0.0449%" height="15" fill="rgb(235,183,28)" fg:x="2" fg:w="1"/><text x="0.3398%" y="911.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.04%)</title><rect x="0.0898%" y="885" width="0.0449%" height="15" fill="rgb(221,5,38)" fg:x="2" fg:w="1"/><text x="0.3398%" y="895.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.04%)</title><rect x="0.0898%" y="869" width="0.0449%" height="15" fill="rgb(247,18,42)" fg:x="2" fg:w="1"/><text x="0.3398%" y="879.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.04%)</title><rect x="0.0898%" y="853" width="0.0449%" height="15" fill="rgb(241,131,45)" fg:x="2" fg:w="1"/><text x="0.3398%" y="863.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.04%)</title><rect x="0.0898%" y="837" width="0.0449%" height="15" fill="rgb(249,31,29)" fg:x="2" fg:w="1"/><text x="0.3398%" y="847.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.04%)</title><rect x="0.0898%" y="821" width="0.0449%" height="15" fill="rgb(225,111,53)" fg:x="2" fg:w="1"/><text x="0.3398%" y="831.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.04%)</title><rect x="0.0898%" y="805" width="0.0449%" height="15" fill="rgb(238,160,17)" fg:x="2" fg:w="1"/><text x="0.3398%" y="815.50"></text></g><g><title>realloc (1 samples, 0.04%)</title><rect x="0.0898%" y="789" width="0.0449%" height="15" fill="rgb(214,148,48)" fg:x="2" fg:w="1"/><text x="0.3398%" y="799.50"></text></g><g><title>[libc.so.6] (1 samples, 0.04%)</title><rect x="0.0898%" y="773" width="0.0449%" height="15" fill="rgb(232,36,49)" fg:x="2" fg:w="1"/><text x="0.3398%" y="783.50"></text></g><g><title>[libc.so.6] (1 samples, 0.04%)</title><rect x="0.0898%" y="757" width="0.0449%" height="15" fill="rgb(209,103,24)" fg:x="2" fg:w="1"/><text x="0.3398%" y="767.50"></text></g><g><title>ahc032_a::State::try_apply (1 samples, 0.04%)</title><rect x="0.1346%" y="885" width="0.0449%" height="15" fill="rgb(229,88,8)" fg:x="3" fg:w="1"/><text x="0.3846%" y="895.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.04%)</title><rect x="0.1795%" y="869" width="0.0449%" height="15" fill="rgb(213,181,19)" fg:x="4" fg:w="1"/><text x="0.4295%" y="879.50"></text></g><g><title>alloc::rc::RcInnerPtr::inc_strong (1 samples, 0.04%)</title><rect x="0.1795%" y="853" width="0.0449%" height="15" fill="rgb(254,191,54)" fg:x="4" fg:w="1"/><text x="0.4295%" y="863.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (1 samples, 0.04%)</title><rect x="0.1795%" y="837" width="0.0449%" height="15" fill="rgb(241,83,37)" fg:x="4" fg:w="1"/><text x="0.4295%" y="847.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (1 samples, 0.04%)</title><rect x="0.1795%" y="821" width="0.0449%" height="15" fill="rgb(233,36,39)" fg:x="4" fg:w="1"/><text x="0.4295%" y="831.50"></text></g><g><title>core::mem::replace (1 samples, 0.04%)</title><rect x="0.1795%" y="805" width="0.0449%" height="15" fill="rgb(226,3,54)" fg:x="4" fg:w="1"/><text x="0.4295%" y="815.50"></text></g><g><title>core::ptr::write (1 samples, 0.04%)</title><rect x="0.1795%" y="789" width="0.0449%" height="15" fill="rgb(245,192,40)" fg:x="4" fg:w="1"/><text x="0.4295%" y="799.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.04%)</title><rect x="0.4937%" y="853" width="0.0449%" height="15" fill="rgb(238,167,29)" fg:x="11" fg:w="1"/><text x="0.7437%" y="863.50"></text></g><g><title>alloc::rc::RcInnerPtr::inc_strong (1 samples, 0.04%)</title><rect x="0.4937%" y="837" width="0.0449%" height="15" fill="rgb(232,182,51)" fg:x="11" fg:w="1"/><text x="0.7437%" y="847.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (1 samples, 0.04%)</title><rect x="0.4937%" y="821" width="0.0449%" height="15" fill="rgb(231,60,39)" fg:x="11" fg:w="1"/><text x="0.7437%" y="831.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (1 samples, 0.04%)</title><rect x="0.4937%" y="805" width="0.0449%" height="15" fill="rgb(208,69,12)" fg:x="11" fg:w="1"/><text x="0.7437%" y="815.50"></text></g><g><title>core::mem::replace (1 samples, 0.04%)</title><rect x="0.4937%" y="789" width="0.0449%" height="15" fill="rgb(235,93,37)" fg:x="11" fg:w="1"/><text x="0.7437%" y="799.50"></text></g><g><title>core::ptr::write (1 samples, 0.04%)</title><rect x="0.4937%" y="773" width="0.0449%" height="15" fill="rgb(213,116,39)" fg:x="11" fg:w="1"/><text x="0.7437%" y="783.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.09%)</title><rect x="0.5386%" y="853" width="0.0898%" height="15" fill="rgb(222,207,29)" fg:x="12" fg:w="2"/><text x="0.7886%" y="863.50"></text></g><g><title>core::ptr::read (2 samples, 0.09%)</title><rect x="0.5386%" y="837" width="0.0898%" height="15" fill="rgb(206,96,30)" fg:x="12" fg:w="2"/><text x="0.7886%" y="847.50"></text></g><g><title>ahc032_a::State::get_neighbor (14 samples, 0.63%)</title><rect x="0.6284%" y="853" width="0.6284%" height="15" fill="rgb(218,138,4)" fg:x="14" fg:w="14"/><text x="0.8784%" y="863.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (10 samples, 0.45%)</title><rect x="0.8079%" y="837" width="0.4488%" height="15" fill="rgb(250,191,14)" fg:x="18" fg:w="10"/><text x="1.0579%" y="847.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (1 samples, 0.04%)</title><rect x="1.2118%" y="821" width="0.0449%" height="15" fill="rgb(239,60,40)" fg:x="27" fg:w="1"/><text x="1.4618%" y="831.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (1 samples, 0.04%)</title><rect x="1.2118%" y="805" width="0.0449%" height="15" fill="rgb(206,27,48)" fg:x="27" fg:w="1"/><text x="1.4618%" y="815.50"></text></g><g><title>&lt;ahc032_a::grid::Coordinate as core::ops::arith::Add&lt;ahc032_a::grid::CoordinateDiff&gt;&gt;::add (2 samples, 0.09%)</title><rect x="3.3662%" y="837" width="0.0898%" height="15" fill="rgb(225,35,8)" fg:x="75" fg:w="2"/><text x="3.6162%" y="847.50"></text></g><g><title>core::num::&lt;impl usize&gt;::wrapping_add (2 samples, 0.09%)</title><rect x="3.3662%" y="821" width="0.0898%" height="15" fill="rgb(250,213,24)" fg:x="75" fg:w="2"/><text x="3.6162%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (2 samples, 0.09%)</title><rect x="3.4560%" y="837" width="0.0898%" height="15" fill="rgb(247,123,22)" fg:x="77" fg:w="2"/><text x="3.7060%" y="847.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (2 samples, 0.09%)</title><rect x="3.4560%" y="821" width="0.0898%" height="15" fill="rgb(231,138,38)" fg:x="77" fg:w="2"/><text x="3.7060%" y="831.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (2 samples, 0.09%)</title><rect x="3.4560%" y="805" width="0.0898%" height="15" fill="rgb(231,145,46)" fg:x="77" fg:w="2"/><text x="3.7060%" y="815.50"></text></g><g><title>ahc032_a::State::try_apply (61 samples, 2.74%)</title><rect x="1.2567%" y="853" width="2.7379%" height="15" fill="rgb(251,118,11)" fg:x="28" fg:w="61"/><text x="1.5067%" y="863.50">ah..</text></g><g><title>compiler_builtins::int::specialized_div_rem::u128_div_rem (10 samples, 0.45%)</title><rect x="3.5458%" y="837" width="0.4488%" height="15" fill="rgb(217,147,25)" fg:x="79" fg:w="10"/><text x="3.7958%" y="847.50"></text></g><g><title>core::num::&lt;impl u128&gt;::leading_zeros (8 samples, 0.36%)</title><rect x="3.6355%" y="821" width="0.3591%" height="15" fill="rgb(247,81,37)" fg:x="81" fg:w="8"/><text x="3.8855%" y="831.50"></text></g><g><title>ahc032_a::State::back (1 samples, 0.04%)</title><rect x="3.9946%" y="837" width="0.0449%" height="15" fill="rgb(209,12,38)" fg:x="89" fg:w="1"/><text x="4.2446%" y="847.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::clone::Clone&gt;::clone (4 samples, 0.18%)</title><rect x="4.3537%" y="741" width="0.1795%" height="15" fill="rgb(227,1,9)" fg:x="97" fg:w="4"/><text x="4.6037%" y="751.50"></text></g><g><title>alloc::rc::RcInnerPtr::inc_strong (4 samples, 0.18%)</title><rect x="4.3537%" y="725" width="0.1795%" height="15" fill="rgb(248,47,43)" fg:x="97" fg:w="4"/><text x="4.6037%" y="735.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (4 samples, 0.18%)</title><rect x="4.3537%" y="709" width="0.1795%" height="15" fill="rgb(221,10,30)" fg:x="97" fg:w="4"/><text x="4.6037%" y="719.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (4 samples, 0.18%)</title><rect x="4.3537%" y="693" width="0.1795%" height="15" fill="rgb(210,229,1)" fg:x="97" fg:w="4"/><text x="4.6037%" y="703.50"></text></g><g><title>core::mem::replace (4 samples, 0.18%)</title><rect x="4.3537%" y="677" width="0.1795%" height="15" fill="rgb(222,148,37)" fg:x="97" fg:w="4"/><text x="4.6037%" y="687.50"></text></g><g><title>core::ptr::write (4 samples, 0.18%)</title><rect x="4.3537%" y="661" width="0.1795%" height="15" fill="rgb(234,67,33)" fg:x="97" fg:w="4"/><text x="4.6037%" y="671.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.04%)</title><rect x="4.5332%" y="741" width="0.0449%" height="15" fill="rgb(247,98,35)" fg:x="101" fg:w="1"/><text x="4.7832%" y="751.50"></text></g><g><title>core::ptr::read (1 samples, 0.04%)</title><rect x="4.5332%" y="725" width="0.0449%" height="15" fill="rgb(247,138,52)" fg:x="101" fg:w="1"/><text x="4.7832%" y="735.50"></text></g><g><title>ahc032_a::State::get_neighbor (20 samples, 0.90%)</title><rect x="4.5781%" y="741" width="0.8977%" height="15" fill="rgb(213,79,30)" fg:x="102" fg:w="20"/><text x="4.8281%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (11 samples, 0.49%)</title><rect x="4.9820%" y="725" width="0.4937%" height="15" fill="rgb(246,177,23)" fg:x="111" fg:w="11"/><text x="5.2320%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.04%)</title><rect x="5.4309%" y="709" width="0.0449%" height="15" fill="rgb(230,62,27)" fg:x="121" fg:w="1"/><text x="5.6809%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.04%)</title><rect x="5.4309%" y="693" width="0.0449%" height="15" fill="rgb(216,154,8)" fg:x="121" fg:w="1"/><text x="5.6809%" y="703.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.04%)</title><rect x="5.4309%" y="677" width="0.0449%" height="15" fill="rgb(244,35,45)" fg:x="121" fg:w="1"/><text x="5.6809%" y="687.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.04%)</title><rect x="5.4309%" y="661" width="0.0449%" height="15" fill="rgb(251,115,12)" fg:x="121" fg:w="1"/><text x="5.6809%" y="671.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.04%)</title><rect x="5.4309%" y="645" width="0.0449%" height="15" fill="rgb(240,54,50)" fg:x="121" fg:w="1"/><text x="5.6809%" y="655.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.04%)</title><rect x="5.4309%" y="629" width="0.0449%" height="15" fill="rgb(233,84,52)" fg:x="121" fg:w="1"/><text x="5.6809%" y="639.50"></text></g><g><title>realloc (1 samples, 0.04%)</title><rect x="5.4309%" y="613" width="0.0449%" height="15" fill="rgb(207,117,47)" fg:x="121" fg:w="1"/><text x="5.6809%" y="623.50"></text></g><g><title>[libc.so.6] (1 samples, 0.04%)</title><rect x="5.4309%" y="597" width="0.0449%" height="15" fill="rgb(249,43,39)" fg:x="121" fg:w="1"/><text x="5.6809%" y="607.50"></text></g><g><title>[libc.so.6] (1 samples, 0.04%)</title><rect x="5.4309%" y="581" width="0.0449%" height="15" fill="rgb(209,38,44)" fg:x="121" fg:w="1"/><text x="5.6809%" y="591.50"></text></g><g><title>&lt;ahc032_a::grid::Coordinate as core::ops::arith::Add&lt;ahc032_a::grid::CoordinateDiff&gt;&gt;::add (1 samples, 0.04%)</title><rect x="7.0018%" y="725" width="0.0449%" height="15" fill="rgb(236,212,23)" fg:x="156" fg:w="1"/><text x="7.2518%" y="735.50"></text></g><g><title>core::num::&lt;impl usize&gt;::wrapping_add (1 samples, 0.04%)</title><rect x="7.0018%" y="709" width="0.0449%" height="15" fill="rgb(242,79,21)" fg:x="156" fg:w="1"/><text x="7.2518%" y="719.50"></text></g><g><title>&lt;ahc032_a::grid::Map2d&lt;T&gt; as core::ops::index::Index&lt;ahc032_a::grid::Coordinate&gt;&gt;::index (1 samples, 0.04%)</title><rect x="7.0467%" y="725" width="0.0449%" height="15" fill="rgb(211,96,35)" fg:x="157" fg:w="1"/><text x="7.2967%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (1 samples, 0.04%)</title><rect x="7.0467%" y="709" width="0.0449%" height="15" fill="rgb(253,215,40)" fg:x="157" fg:w="1"/><text x="7.2967%" y="719.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (1 samples, 0.04%)</title><rect x="7.0467%" y="693" width="0.0449%" height="15" fill="rgb(211,81,21)" fg:x="157" fg:w="1"/><text x="7.2967%" y="703.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (1 samples, 0.04%)</title><rect x="7.0467%" y="677" width="0.0449%" height="15" fill="rgb(208,190,38)" fg:x="157" fg:w="1"/><text x="7.2967%" y="687.50"></text></g><g><title>__udivti3 (1 samples, 0.04%)</title><rect x="7.0916%" y="725" width="0.0449%" height="15" fill="rgb(235,213,38)" fg:x="158" fg:w="1"/><text x="7.3416%" y="735.50"></text></g><g><title>compiler_builtins::int::udiv::__udivti3 (1 samples, 0.04%)</title><rect x="7.0916%" y="709" width="0.0449%" height="15" fill="rgb(237,122,38)" fg:x="158" fg:w="1"/><text x="7.3416%" y="719.50"></text></g><g><title>ahc032_a::State::try_apply (49 samples, 2.20%)</title><rect x="5.4758%" y="741" width="2.1993%" height="15" fill="rgb(244,218,35)" fg:x="122" fg:w="49"/><text x="5.7258%" y="751.50">a..</text></g><g><title>compiler_builtins::int::specialized_div_rem::u128_div_rem (12 samples, 0.54%)</title><rect x="7.1364%" y="725" width="0.5386%" height="15" fill="rgb(240,68,47)" fg:x="159" fg:w="12"/><text x="7.3864%" y="735.50"></text></g><g><title>core::num::&lt;impl u128&gt;::leading_zeros (6 samples, 0.27%)</title><rect x="7.4057%" y="709" width="0.2693%" height="15" fill="rgb(210,16,53)" fg:x="165" fg:w="6"/><text x="7.6557%" y="719.50"></text></g><g><title>ahc032_a::State::apply (1 samples, 0.04%)</title><rect x="7.6750%" y="709" width="0.0449%" height="15" fill="rgb(235,124,12)" fg:x="171" fg:w="1"/><text x="7.9250%" y="719.50"></text></g><g><title>ahc032_a::State::get_neighbor (1 samples, 0.04%)</title><rect x="7.7199%" y="709" width="0.0449%" height="15" fill="rgb(224,169,11)" fg:x="172" fg:w="1"/><text x="7.9699%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.04%)</title><rect x="7.7199%" y="693" width="0.0449%" height="15" fill="rgb(250,166,2)" fg:x="172" fg:w="1"/><text x="7.9699%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.04%)</title><rect x="7.7199%" y="677" width="0.0449%" height="15" fill="rgb(242,216,29)" fg:x="172" fg:w="1"/><text x="7.9699%" y="687.50"></text></g><g><title>ahc032_a::State::apply (1 samples, 0.04%)</title><rect x="7.7648%" y="677" width="0.0449%" height="15" fill="rgb(230,116,27)" fg:x="173" fg:w="1"/><text x="8.0148%" y="687.50"></text></g><g><title>ahc032_a::State::back (1 samples, 0.04%)</title><rect x="7.8097%" y="661" width="0.0449%" height="15" fill="rgb(228,99,48)" fg:x="174" fg:w="1"/><text x="8.0597%" y="671.50"></text></g><g><title>ahc032_a::State::get_neighbor (1 samples, 0.04%)</title><rect x="7.8546%" y="661" width="0.0449%" height="15" fill="rgb(253,11,6)" fg:x="175" fg:w="1"/><text x="8.1046%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.04%)</title><rect x="7.8546%" y="645" width="0.0449%" height="15" fill="rgb(247,143,39)" fg:x="175" fg:w="1"/><text x="8.1046%" y="655.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.04%)</title><rect x="7.8995%" y="645" width="0.0449%" height="15" fill="rgb(236,97,10)" fg:x="176" fg:w="1"/><text x="8.1495%" y="655.50"></text></g><g><title>alloc::rc::RcInnerPtr::inc_strong (1 samples, 0.04%)</title><rect x="7.8995%" y="629" width="0.0449%" height="15" fill="rgb(233,208,19)" fg:x="176" fg:w="1"/><text x="8.1495%" y="639.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (1 samples, 0.04%)</title><rect x="7.8995%" y="613" width="0.0449%" height="15" fill="rgb(216,164,2)" fg:x="176" fg:w="1"/><text x="8.1495%" y="623.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (1 samples, 0.04%)</title><rect x="7.8995%" y="597" width="0.0449%" height="15" fill="rgb(220,129,5)" fg:x="176" fg:w="1"/><text x="8.1495%" y="607.50"></text></g><g><title>core::mem::replace (1 samples, 0.04%)</title><rect x="7.8995%" y="581" width="0.0449%" height="15" fill="rgb(242,17,10)" fg:x="176" fg:w="1"/><text x="8.1495%" y="591.50"></text></g><g><title>core::ptr::write (1 samples, 0.04%)</title><rect x="7.8995%" y="565" width="0.0449%" height="15" fill="rgb(242,107,0)" fg:x="176" fg:w="1"/><text x="8.1495%" y="575.50"></text></g><g><title>ahc032_a::State::apply (1 samples, 0.04%)</title><rect x="7.9443%" y="645" width="0.0449%" height="15" fill="rgb(251,28,31)" fg:x="177" fg:w="1"/><text x="8.1943%" y="655.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.04%)</title><rect x="8.2136%" y="629" width="0.0449%" height="15" fill="rgb(233,223,10)" fg:x="183" fg:w="1"/><text x="8.4636%" y="639.50"></text></g><g><title>alloc::rc::RcInnerPtr::inc_strong (1 samples, 0.04%)</title><rect x="8.2136%" y="613" width="0.0449%" height="15" fill="rgb(215,21,27)" fg:x="183" fg:w="1"/><text x="8.4636%" y="623.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (1 samples, 0.04%)</title><rect x="8.2136%" y="597" width="0.0449%" height="15" fill="rgb(232,23,21)" fg:x="183" fg:w="1"/><text x="8.4636%" y="607.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (1 samples, 0.04%)</title><rect x="8.2136%" y="581" width="0.0449%" height="15" fill="rgb(244,5,23)" fg:x="183" fg:w="1"/><text x="8.4636%" y="591.50"></text></g><g><title>core::mem::replace (1 samples, 0.04%)</title><rect x="8.2136%" y="565" width="0.0449%" height="15" fill="rgb(226,81,46)" fg:x="183" fg:w="1"/><text x="8.4636%" y="575.50"></text></g><g><title>core::ptr::write (1 samples, 0.04%)</title><rect x="8.2136%" y="549" width="0.0449%" height="15" fill="rgb(247,70,30)" fg:x="183" fg:w="1"/><text x="8.4636%" y="559.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.13%)</title><rect x="8.2585%" y="629" width="0.1346%" height="15" fill="rgb(212,68,19)" fg:x="184" fg:w="3"/><text x="8.5085%" y="639.50"></text></g><g><title>core::ptr::read (3 samples, 0.13%)</title><rect x="8.2585%" y="613" width="0.1346%" height="15" fill="rgb(240,187,13)" fg:x="184" fg:w="3"/><text x="8.5085%" y="623.50"></text></g><g><title>ahc032_a::State::get_neighbor (18 samples, 0.81%)</title><rect x="8.3932%" y="629" width="0.8079%" height="15" fill="rgb(223,113,26)" fg:x="187" fg:w="18"/><text x="8.6432%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (12 samples, 0.54%)</title><rect x="8.6625%" y="613" width="0.5386%" height="15" fill="rgb(206,192,2)" fg:x="193" fg:w="12"/><text x="8.9125%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.04%)</title><rect x="9.1562%" y="597" width="0.0449%" height="15" fill="rgb(241,108,4)" fg:x="204" fg:w="1"/><text x="9.4062%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.04%)</title><rect x="9.1562%" y="581" width="0.0449%" height="15" fill="rgb(247,173,49)" fg:x="204" fg:w="1"/><text x="9.4062%" y="591.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.04%)</title><rect x="9.1562%" y="565" width="0.0449%" height="15" fill="rgb(224,114,35)" fg:x="204" fg:w="1"/><text x="9.4062%" y="575.50"></text></g><g><title>malloc (1 samples, 0.04%)</title><rect x="9.1562%" y="549" width="0.0449%" height="15" fill="rgb(245,159,27)" fg:x="204" fg:w="1"/><text x="9.4062%" y="559.50"></text></g><g><title>&lt;ahc032_a::grid::Map2d&lt;T&gt; as core::ops::index::Index&lt;ahc032_a::grid::Coordinate&gt;&gt;::index (2 samples, 0.09%)</title><rect x="10.9964%" y="613" width="0.0898%" height="15" fill="rgb(245,172,44)" fg:x="245" fg:w="2"/><text x="11.2464%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (2 samples, 0.09%)</title><rect x="10.9964%" y="597" width="0.0898%" height="15" fill="rgb(236,23,11)" fg:x="245" fg:w="2"/><text x="11.2464%" y="607.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (2 samples, 0.09%)</title><rect x="10.9964%" y="581" width="0.0898%" height="15" fill="rgb(205,117,38)" fg:x="245" fg:w="2"/><text x="11.2464%" y="591.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (2 samples, 0.09%)</title><rect x="10.9964%" y="565" width="0.0898%" height="15" fill="rgb(237,72,25)" fg:x="245" fg:w="2"/><text x="11.2464%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (3 samples, 0.13%)</title><rect x="11.0862%" y="613" width="0.1346%" height="15" fill="rgb(244,70,9)" fg:x="247" fg:w="3"/><text x="11.3362%" y="623.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (3 samples, 0.13%)</title><rect x="11.0862%" y="597" width="0.1346%" height="15" fill="rgb(217,125,39)" fg:x="247" fg:w="3"/><text x="11.3362%" y="607.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (3 samples, 0.13%)</title><rect x="11.0862%" y="581" width="0.1346%" height="15" fill="rgb(235,36,10)" fg:x="247" fg:w="3"/><text x="11.3362%" y="591.50"></text></g><g><title>ahc032_a::State::try_apply (53 samples, 2.38%)</title><rect x="9.2011%" y="629" width="2.3788%" height="15" fill="rgb(251,123,47)" fg:x="205" fg:w="53"/><text x="9.4511%" y="639.50">ah..</text></g><g><title>compiler_builtins::int::specialized_div_rem::u128_div_rem (8 samples, 0.36%)</title><rect x="11.2208%" y="613" width="0.3591%" height="15" fill="rgb(221,13,13)" fg:x="250" fg:w="8"/><text x="11.4708%" y="623.50"></text></g><g><title>core::num::&lt;impl u128&gt;::leading_zeros (3 samples, 0.13%)</title><rect x="11.4452%" y="597" width="0.1346%" height="15" fill="rgb(238,131,9)" fg:x="255" fg:w="3"/><text x="11.6952%" y="607.50"></text></g><g><title>ahc032_a::State::get_neighbor (1 samples, 0.04%)</title><rect x="11.5799%" y="613" width="0.0449%" height="15" fill="rgb(211,50,8)" fg:x="258" fg:w="1"/><text x="11.8299%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.04%)</title><rect x="11.5799%" y="597" width="0.0449%" height="15" fill="rgb(245,182,24)" fg:x="258" fg:w="1"/><text x="11.8299%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.04%)</title><rect x="11.5799%" y="581" width="0.0449%" height="15" fill="rgb(242,14,37)" fg:x="258" fg:w="1"/><text x="11.8299%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.04%)</title><rect x="11.5799%" y="565" width="0.0449%" height="15" fill="rgb(246,228,12)" fg:x="258" fg:w="1"/><text x="11.8299%" y="575.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.04%)</title><rect x="11.5799%" y="549" width="0.0449%" height="15" fill="rgb(213,55,15)" fg:x="258" fg:w="1"/><text x="11.8299%" y="559.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.04%)</title><rect x="11.5799%" y="533" width="0.0449%" height="15" fill="rgb(209,9,3)" fg:x="258" fg:w="1"/><text x="11.8299%" y="543.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.04%)</title><rect x="11.5799%" y="517" width="0.0449%" height="15" fill="rgb(230,59,30)" fg:x="258" fg:w="1"/><text x="11.8299%" y="527.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.04%)</title><rect x="11.5799%" y="501" width="0.0449%" height="15" fill="rgb(209,121,21)" fg:x="258" fg:w="1"/><text x="11.8299%" y="511.50"></text></g><g><title>realloc (1 samples, 0.04%)</title><rect x="11.5799%" y="485" width="0.0449%" height="15" fill="rgb(220,109,13)" fg:x="258" fg:w="1"/><text x="11.8299%" y="495.50"></text></g><g><title>[libc.so.6] (1 samples, 0.04%)</title><rect x="11.5799%" y="469" width="0.0449%" height="15" fill="rgb(232,18,1)" fg:x="258" fg:w="1"/><text x="11.8299%" y="479.50"></text></g><g><title>ahc032_a::State::apply (1 samples, 0.04%)</title><rect x="11.6697%" y="581" width="0.0449%" height="15" fill="rgb(215,41,42)" fg:x="260" fg:w="1"/><text x="11.9197%" y="591.50"></text></g><g><title>ahc032_a::State::get_neighbor (1 samples, 0.04%)</title><rect x="11.7145%" y="565" width="0.0449%" height="15" fill="rgb(224,123,36)" fg:x="261" fg:w="1"/><text x="11.9645%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.04%)</title><rect x="11.7145%" y="549" width="0.0449%" height="15" fill="rgb(240,125,3)" fg:x="261" fg:w="1"/><text x="11.9645%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.04%)</title><rect x="11.7145%" y="533" width="0.0449%" height="15" fill="rgb(205,98,50)" fg:x="261" fg:w="1"/><text x="11.9645%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.04%)</title><rect x="11.7145%" y="517" width="0.0449%" height="15" fill="rgb(205,185,37)" fg:x="261" fg:w="1"/><text x="11.9645%" y="527.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.04%)</title><rect x="11.7145%" y="501" width="0.0449%" height="15" fill="rgb(238,207,15)" fg:x="261" fg:w="1"/><text x="11.9645%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.04%)</title><rect x="11.7145%" y="485" width="0.0449%" height="15" fill="rgb(213,199,42)" fg:x="261" fg:w="1"/><text x="11.9645%" y="495.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.04%)</title><rect x="11.7145%" y="469" width="0.0449%" height="15" fill="rgb(235,201,11)" fg:x="261" fg:w="1"/><text x="11.9645%" y="479.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.04%)</title><rect x="11.7145%" y="453" width="0.0449%" height="15" fill="rgb(207,46,11)" fg:x="261" fg:w="1"/><text x="11.9645%" y="463.50"></text></g><g><title>realloc (1 samples, 0.04%)</title><rect x="11.7145%" y="437" width="0.0449%" height="15" fill="rgb(241,35,35)" fg:x="261" fg:w="1"/><text x="11.9645%" y="447.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.04%)</title><rect x="11.7594%" y="549" width="0.0449%" height="15" fill="rgb(243,32,47)" fg:x="262" fg:w="1"/><text x="12.0094%" y="559.50"></text></g><g><title>alloc::rc::RcInnerPtr::inc_strong (1 samples, 0.04%)</title><rect x="11.7594%" y="533" width="0.0449%" height="15" fill="rgb(247,202,23)" fg:x="262" fg:w="1"/><text x="12.0094%" y="543.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.13%)</title><rect x="12.1185%" y="517" width="0.1346%" height="15" fill="rgb(219,102,11)" fg:x="270" fg:w="3"/><text x="12.3685%" y="527.50"></text></g><g><title>alloc::rc::RcInnerPtr::inc_strong (3 samples, 0.13%)</title><rect x="12.1185%" y="501" width="0.1346%" height="15" fill="rgb(243,110,44)" fg:x="270" fg:w="3"/><text x="12.3685%" y="511.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (3 samples, 0.13%)</title><rect x="12.1185%" y="485" width="0.1346%" height="15" fill="rgb(222,74,54)" fg:x="270" fg:w="3"/><text x="12.3685%" y="495.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (3 samples, 0.13%)</title><rect x="12.1185%" y="469" width="0.1346%" height="15" fill="rgb(216,99,12)" fg:x="270" fg:w="3"/><text x="12.3685%" y="479.50"></text></g><g><title>core::mem::replace (3 samples, 0.13%)</title><rect x="12.1185%" y="453" width="0.1346%" height="15" fill="rgb(226,22,26)" fg:x="270" fg:w="3"/><text x="12.3685%" y="463.50"></text></g><g><title>core::ptr::write (3 samples, 0.13%)</title><rect x="12.1185%" y="437" width="0.1346%" height="15" fill="rgb(217,163,10)" fg:x="270" fg:w="3"/><text x="12.3685%" y="447.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.18%)</title><rect x="12.2531%" y="517" width="0.1795%" height="15" fill="rgb(213,25,53)" fg:x="273" fg:w="4"/><text x="12.5031%" y="527.50"></text></g><g><title>core::ptr::read (4 samples, 0.18%)</title><rect x="12.2531%" y="501" width="0.1795%" height="15" fill="rgb(252,105,26)" fg:x="273" fg:w="4"/><text x="12.5031%" y="511.50"></text></g><g><title>ahc032_a::State::get_neighbor (29 samples, 1.30%)</title><rect x="12.4327%" y="517" width="1.3016%" height="15" fill="rgb(220,39,43)" fg:x="277" fg:w="29"/><text x="12.6827%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (22 samples, 0.99%)</title><rect x="12.7469%" y="501" width="0.9874%" height="15" fill="rgb(229,68,48)" fg:x="284" fg:w="22"/><text x="12.9969%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.04%)</title><rect x="13.6894%" y="485" width="0.0449%" height="15" fill="rgb(252,8,32)" fg:x="305" fg:w="1"/><text x="13.9394%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.04%)</title><rect x="13.6894%" y="469" width="0.0449%" height="15" fill="rgb(223,20,43)" fg:x="305" fg:w="1"/><text x="13.9394%" y="479.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.04%)</title><rect x="13.6894%" y="453" width="0.0449%" height="15" fill="rgb(229,81,49)" fg:x="305" fg:w="1"/><text x="13.9394%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.04%)</title><rect x="13.6894%" y="437" width="0.0449%" height="15" fill="rgb(236,28,36)" fg:x="305" fg:w="1"/><text x="13.9394%" y="447.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.04%)</title><rect x="13.6894%" y="421" width="0.0449%" height="15" fill="rgb(249,185,26)" fg:x="305" fg:w="1"/><text x="13.9394%" y="431.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.04%)</title><rect x="13.6894%" y="405" width="0.0449%" height="15" fill="rgb(249,174,33)" fg:x="305" fg:w="1"/><text x="13.9394%" y="415.50"></text></g><g><title>realloc (1 samples, 0.04%)</title><rect x="13.6894%" y="389" width="0.0449%" height="15" fill="rgb(233,201,37)" fg:x="305" fg:w="1"/><text x="13.9394%" y="399.50"></text></g><g><title>[libc.so.6] (1 samples, 0.04%)</title><rect x="13.6894%" y="373" width="0.0449%" height="15" fill="rgb(221,78,26)" fg:x="305" fg:w="1"/><text x="13.9394%" y="383.50"></text></g><g><title>[libc.so.6] (1 samples, 0.04%)</title><rect x="13.6894%" y="357" width="0.0449%" height="15" fill="rgb(250,127,30)" fg:x="305" fg:w="1"/><text x="13.9394%" y="367.50"></text></g><g><title>[libc.so.6] (1 samples, 0.04%)</title><rect x="13.6894%" y="341" width="0.0449%" height="15" fill="rgb(230,49,44)" fg:x="305" fg:w="1"/><text x="13.9394%" y="351.50"></text></g><g><title>&lt;ahc032_a::grid::Coordinate as core::ops::arith::Add&lt;ahc032_a::grid::CoordinateDiff&gt;&gt;::add (2 samples, 0.09%)</title><rect x="14.9013%" y="501" width="0.0898%" height="15" fill="rgb(229,67,23)" fg:x="332" fg:w="2"/><text x="15.1513%" y="511.50"></text></g><g><title>core::num::&lt;impl usize&gt;::wrapping_add (2 samples, 0.09%)</title><rect x="14.9013%" y="485" width="0.0898%" height="15" fill="rgb(249,83,47)" fg:x="332" fg:w="2"/><text x="15.1513%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (1 samples, 0.04%)</title><rect x="14.9910%" y="501" width="0.0449%" height="15" fill="rgb(215,43,3)" fg:x="334" fg:w="1"/><text x="15.2410%" y="511.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (1 samples, 0.04%)</title><rect x="14.9910%" y="485" width="0.0449%" height="15" fill="rgb(238,154,13)" fg:x="334" fg:w="1"/><text x="15.2410%" y="495.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (1 samples, 0.04%)</title><rect x="14.9910%" y="469" width="0.0449%" height="15" fill="rgb(219,56,2)" fg:x="334" fg:w="1"/><text x="15.2410%" y="479.50"></text></g><g><title>ahc032_a::State::try_apply (38 samples, 1.71%)</title><rect x="13.7343%" y="517" width="1.7056%" height="15" fill="rgb(233,0,4)" fg:x="306" fg:w="38"/><text x="13.9843%" y="527.50"></text></g><g><title>compiler_builtins::int::specialized_div_rem::u128_div_rem (9 samples, 0.40%)</title><rect x="15.0359%" y="501" width="0.4039%" height="15" fill="rgb(235,30,7)" fg:x="335" fg:w="9"/><text x="15.2859%" y="511.50"></text></g><g><title>core::num::&lt;impl u128&gt;::leading_zeros (5 samples, 0.22%)</title><rect x="15.2154%" y="485" width="0.2244%" height="15" fill="rgb(250,79,13)" fg:x="339" fg:w="5"/><text x="15.4654%" y="495.50"></text></g><g><title>ahc032_a::State::apply (1 samples, 0.04%)</title><rect x="15.4399%" y="469" width="0.0449%" height="15" fill="rgb(211,146,34)" fg:x="344" fg:w="1"/><text x="15.6899%" y="479.50"></text></g><g><title>ahc032_a::State::get_neighbor (1 samples, 0.04%)</title><rect x="15.4847%" y="437" width="0.0449%" height="15" fill="rgb(228,22,38)" fg:x="345" fg:w="1"/><text x="15.7347%" y="447.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.13%)</title><rect x="15.9336%" y="405" width="0.1346%" height="15" fill="rgb(235,168,5)" fg:x="355" fg:w="3"/><text x="16.1836%" y="415.50"></text></g><g><title>alloc::rc::RcInnerPtr::inc_strong (3 samples, 0.13%)</title><rect x="15.9336%" y="389" width="0.1346%" height="15" fill="rgb(221,155,16)" fg:x="355" fg:w="3"/><text x="16.1836%" y="399.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (3 samples, 0.13%)</title><rect x="15.9336%" y="373" width="0.1346%" height="15" fill="rgb(215,215,53)" fg:x="355" fg:w="3"/><text x="16.1836%" y="383.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (3 samples, 0.13%)</title><rect x="15.9336%" y="357" width="0.1346%" height="15" fill="rgb(223,4,10)" fg:x="355" fg:w="3"/><text x="16.1836%" y="367.50"></text></g><g><title>core::mem::replace (3 samples, 0.13%)</title><rect x="15.9336%" y="341" width="0.1346%" height="15" fill="rgb(234,103,6)" fg:x="355" fg:w="3"/><text x="16.1836%" y="351.50"></text></g><g><title>core::ptr::write (3 samples, 0.13%)</title><rect x="15.9336%" y="325" width="0.1346%" height="15" fill="rgb(227,97,0)" fg:x="355" fg:w="3"/><text x="16.1836%" y="335.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.04%)</title><rect x="16.0682%" y="405" width="0.0449%" height="15" fill="rgb(234,150,53)" fg:x="358" fg:w="1"/><text x="16.3182%" y="415.50"></text></g><g><title>core::ptr::read (1 samples, 0.04%)</title><rect x="16.0682%" y="389" width="0.0449%" height="15" fill="rgb(228,201,54)" fg:x="358" fg:w="1"/><text x="16.3182%" y="399.50"></text></g><g><title>ahc032_a::State::get_neighbor (22 samples, 0.99%)</title><rect x="16.1131%" y="405" width="0.9874%" height="15" fill="rgb(222,22,37)" fg:x="359" fg:w="22"/><text x="16.3631%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (12 samples, 0.54%)</title><rect x="16.5619%" y="389" width="0.5386%" height="15" fill="rgb(237,53,32)" fg:x="369" fg:w="12"/><text x="16.8119%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.04%)</title><rect x="17.0557%" y="373" width="0.0449%" height="15" fill="rgb(233,25,53)" fg:x="380" fg:w="1"/><text x="17.3057%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.04%)</title><rect x="17.0557%" y="357" width="0.0449%" height="15" fill="rgb(210,40,34)" fg:x="380" fg:w="1"/><text x="17.3057%" y="367.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.04%)</title><rect x="17.0557%" y="341" width="0.0449%" height="15" fill="rgb(241,220,44)" fg:x="380" fg:w="1"/><text x="17.3057%" y="351.50"></text></g><g><title>malloc (1 samples, 0.04%)</title><rect x="17.0557%" y="325" width="0.0449%" height="15" fill="rgb(235,28,35)" fg:x="380" fg:w="1"/><text x="17.3057%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (2 samples, 0.09%)</title><rect x="18.5368%" y="389" width="0.0898%" height="15" fill="rgb(210,56,17)" fg:x="413" fg:w="2"/><text x="18.7868%" y="399.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (2 samples, 0.09%)</title><rect x="18.5368%" y="373" width="0.0898%" height="15" fill="rgb(224,130,29)" fg:x="413" fg:w="2"/><text x="18.7868%" y="383.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (2 samples, 0.09%)</title><rect x="18.5368%" y="357" width="0.0898%" height="15" fill="rgb(235,212,8)" fg:x="413" fg:w="2"/><text x="18.7868%" y="367.50"></text></g><g><title>ahc032_a::State::try_apply (44 samples, 1.97%)</title><rect x="17.1005%" y="405" width="1.9749%" height="15" fill="rgb(223,33,50)" fg:x="381" fg:w="44"/><text x="17.3505%" y="415.50">a..</text></g><g><title>compiler_builtins::int::specialized_div_rem::u128_div_rem (10 samples, 0.45%)</title><rect x="18.6266%" y="389" width="0.4488%" height="15" fill="rgb(219,149,13)" fg:x="415" fg:w="10"/><text x="18.8766%" y="399.50"></text></g><g><title>core::num::&lt;impl u128&gt;::leading_zeros (9 samples, 0.40%)</title><rect x="18.6715%" y="373" width="0.4039%" height="15" fill="rgb(250,156,29)" fg:x="416" fg:w="9"/><text x="18.9215%" y="383.50"></text></g><g><title>ahc032_a::State::try_apply (1 samples, 0.04%)</title><rect x="19.0754%" y="389" width="0.0449%" height="15" fill="rgb(216,193,19)" fg:x="425" fg:w="1"/><text x="19.3254%" y="399.50"></text></g><g><title>ahc032_a::State::get_neighbor (1 samples, 0.04%)</title><rect x="19.1203%" y="373" width="0.0449%" height="15" fill="rgb(216,135,14)" fg:x="426" fg:w="1"/><text x="19.3703%" y="383.50"></text></g><g><title>ahc032_a::State::try_apply (1 samples, 0.04%)</title><rect x="19.2101%" y="325" width="0.0449%" height="15" fill="rgb(241,47,5)" fg:x="428" fg:w="1"/><text x="19.4601%" y="335.50"></text></g><g><title>compiler_builtins::int::specialized_div_rem::u128_div_rem (1 samples, 0.04%)</title><rect x="19.2101%" y="309" width="0.0449%" height="15" fill="rgb(233,42,35)" fg:x="428" fg:w="1"/><text x="19.4601%" y="319.50"></text></g><g><title>core::num::&lt;impl u128&gt;::leading_zeros (1 samples, 0.04%)</title><rect x="19.2101%" y="293" width="0.0449%" height="15" fill="rgb(231,13,6)" fg:x="428" fg:w="1"/><text x="19.4601%" y="303.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::clone::Clone&gt;::clone (4 samples, 0.18%)</title><rect x="19.4794%" y="293" width="0.1795%" height="15" fill="rgb(207,181,40)" fg:x="434" fg:w="4"/><text x="19.7294%" y="303.50"></text></g><g><title>alloc::rc::RcInnerPtr::inc_strong (4 samples, 0.18%)</title><rect x="19.4794%" y="277" width="0.1795%" height="15" fill="rgb(254,173,49)" fg:x="434" fg:w="4"/><text x="19.7294%" y="287.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (4 samples, 0.18%)</title><rect x="19.4794%" y="261" width="0.1795%" height="15" fill="rgb(221,1,38)" fg:x="434" fg:w="4"/><text x="19.7294%" y="271.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (4 samples, 0.18%)</title><rect x="19.4794%" y="245" width="0.1795%" height="15" fill="rgb(206,124,46)" fg:x="434" fg:w="4"/><text x="19.7294%" y="255.50"></text></g><g><title>core::mem::replace (4 samples, 0.18%)</title><rect x="19.4794%" y="229" width="0.1795%" height="15" fill="rgb(249,21,11)" fg:x="434" fg:w="4"/><text x="19.7294%" y="239.50"></text></g><g><title>core::ptr::write (4 samples, 0.18%)</title><rect x="19.4794%" y="213" width="0.1795%" height="15" fill="rgb(222,201,40)" fg:x="434" fg:w="4"/><text x="19.7294%" y="223.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.22%)</title><rect x="19.6589%" y="293" width="0.2244%" height="15" fill="rgb(235,61,29)" fg:x="438" fg:w="5"/><text x="19.9089%" y="303.50"></text></g><g><title>core::ptr::read (5 samples, 0.22%)</title><rect x="19.6589%" y="277" width="0.2244%" height="15" fill="rgb(219,207,3)" fg:x="438" fg:w="5"/><text x="19.9089%" y="287.50"></text></g><g><title>ahc032_a::State::get_neighbor (19 samples, 0.85%)</title><rect x="19.8833%" y="293" width="0.8528%" height="15" fill="rgb(222,56,46)" fg:x="443" fg:w="19"/><text x="20.1333%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (12 samples, 0.54%)</title><rect x="20.1975%" y="277" width="0.5386%" height="15" fill="rgb(239,76,54)" fg:x="450" fg:w="12"/><text x="20.4475%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (2 samples, 0.09%)</title><rect x="20.6463%" y="261" width="0.0898%" height="15" fill="rgb(231,124,27)" fg:x="460" fg:w="2"/><text x="20.8963%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.09%)</title><rect x="20.6463%" y="245" width="0.0898%" height="15" fill="rgb(249,195,6)" fg:x="460" fg:w="2"/><text x="20.8963%" y="255.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.09%)</title><rect x="20.6463%" y="229" width="0.0898%" height="15" fill="rgb(237,174,47)" fg:x="460" fg:w="2"/><text x="20.8963%" y="239.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (2 samples, 0.09%)</title><rect x="20.6463%" y="213" width="0.0898%" height="15" fill="rgb(206,201,31)" fg:x="460" fg:w="2"/><text x="20.8963%" y="223.50"></text></g><g><title>alloc::alloc::Global::grow_impl (2 samples, 0.09%)</title><rect x="20.6463%" y="197" width="0.0898%" height="15" fill="rgb(231,57,52)" fg:x="460" fg:w="2"/><text x="20.8963%" y="207.50"></text></g><g><title>alloc::alloc::realloc (2 samples, 0.09%)</title><rect x="20.6463%" y="181" width="0.0898%" height="15" fill="rgb(248,177,22)" fg:x="460" fg:w="2"/><text x="20.8963%" y="191.50"></text></g><g><title>realloc (2 samples, 0.09%)</title><rect x="20.6463%" y="165" width="0.0898%" height="15" fill="rgb(215,211,37)" fg:x="460" fg:w="2"/><text x="20.8963%" y="175.50"></text></g><g><title>[libc.so.6] (2 samples, 0.09%)</title><rect x="20.6463%" y="149" width="0.0898%" height="15" fill="rgb(241,128,51)" fg:x="460" fg:w="2"/><text x="20.8963%" y="159.50"></text></g><g><title>[libc.so.6] (2 samples, 0.09%)</title><rect x="20.6463%" y="133" width="0.0898%" height="15" fill="rgb(227,165,31)" fg:x="460" fg:w="2"/><text x="20.8963%" y="143.50"></text></g><g><title>&lt;ahc032_a::grid::Map2d&lt;T&gt; as core::ops::index::Index&lt;ahc032_a::grid::Coordinate&gt;&gt;::index (2 samples, 0.09%)</title><rect x="22.3070%" y="277" width="0.0898%" height="15" fill="rgb(228,167,24)" fg:x="497" fg:w="2"/><text x="22.5570%" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (2 samples, 0.09%)</title><rect x="22.3070%" y="261" width="0.0898%" height="15" fill="rgb(228,143,12)" fg:x="497" fg:w="2"/><text x="22.5570%" y="271.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (2 samples, 0.09%)</title><rect x="22.3070%" y="245" width="0.0898%" height="15" fill="rgb(249,149,8)" fg:x="497" fg:w="2"/><text x="22.5570%" y="255.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (2 samples, 0.09%)</title><rect x="22.3070%" y="229" width="0.0898%" height="15" fill="rgb(243,35,44)" fg:x="497" fg:w="2"/><text x="22.5570%" y="239.50"></text></g><g><title>ahc032_a::State::try_apply (44 samples, 1.97%)</title><rect x="20.7361%" y="293" width="1.9749%" height="15" fill="rgb(246,89,9)" fg:x="462" fg:w="44"/><text x="20.9861%" y="303.50">a..</text></g><g><title>compiler_builtins::int::specialized_div_rem::u128_div_rem (7 samples, 0.31%)</title><rect x="22.3968%" y="277" width="0.3142%" height="15" fill="rgb(233,213,13)" fg:x="499" fg:w="7"/><text x="22.6468%" y="287.50"></text></g><g><title>core::num::&lt;impl u128&gt;::leading_zeros (5 samples, 0.22%)</title><rect x="22.4865%" y="261" width="0.2244%" height="15" fill="rgb(233,141,41)" fg:x="501" fg:w="5"/><text x="22.7365%" y="271.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.22%)</title><rect x="23.0700%" y="277" width="0.2244%" height="15" fill="rgb(239,167,4)" fg:x="514" fg:w="5"/><text x="23.3200%" y="287.50"></text></g><g><title>core::ptr::read (5 samples, 0.22%)</title><rect x="23.0700%" y="261" width="0.2244%" height="15" fill="rgb(209,217,16)" fg:x="514" fg:w="5"/><text x="23.3200%" y="271.50"></text></g><g><title>ahc032_a::State::get_neighbor (17 samples, 0.76%)</title><rect x="23.2944%" y="277" width="0.7630%" height="15" fill="rgb(219,88,35)" fg:x="519" fg:w="17"/><text x="23.5444%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (13 samples, 0.58%)</title><rect x="23.4740%" y="261" width="0.5835%" height="15" fill="rgb(220,193,23)" fg:x="523" fg:w="13"/><text x="23.7240%" y="271.50"></text></g><g><title>&lt;ahc032_a::grid::Coordinate as core::ops::arith::Add&lt;ahc032_a::grid::CoordinateDiff&gt;&gt;::add (1 samples, 0.04%)</title><rect x="25.4039%" y="261" width="0.0449%" height="15" fill="rgb(230,90,52)" fg:x="566" fg:w="1"/><text x="25.6539%" y="271.50"></text></g><g><title>core::num::&lt;impl usize&gt;::wrapping_add (1 samples, 0.04%)</title><rect x="25.4039%" y="245" width="0.0449%" height="15" fill="rgb(252,106,19)" fg:x="566" fg:w="1"/><text x="25.6539%" y="255.50"></text></g><g><title>&lt;ahc032_a::grid::Map2d&lt;T&gt; as core::ops::index::Index&lt;ahc032_a::grid::Coordinate&gt;&gt;::index (1 samples, 0.04%)</title><rect x="25.4488%" y="261" width="0.0449%" height="15" fill="rgb(206,74,20)" fg:x="567" fg:w="1"/><text x="25.6988%" y="271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (1 samples, 0.04%)</title><rect x="25.4488%" y="245" width="0.0449%" height="15" fill="rgb(230,138,44)" fg:x="567" fg:w="1"/><text x="25.6988%" y="255.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (1 samples, 0.04%)</title><rect x="25.4488%" y="229" width="0.0449%" height="15" fill="rgb(235,182,43)" fg:x="567" fg:w="1"/><text x="25.6988%" y="239.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (1 samples, 0.04%)</title><rect x="25.4488%" y="213" width="0.0449%" height="15" fill="rgb(242,16,51)" fg:x="567" fg:w="1"/><text x="25.6988%" y="223.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (1 samples, 0.04%)</title><rect x="25.4937%" y="261" width="0.0449%" height="15" fill="rgb(248,9,4)" fg:x="568" fg:w="1"/><text x="25.7437%" y="271.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (1 samples, 0.04%)</title><rect x="25.4937%" y="245" width="0.0449%" height="15" fill="rgb(210,31,22)" fg:x="568" fg:w="1"/><text x="25.7437%" y="255.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (1 samples, 0.04%)</title><rect x="25.4937%" y="229" width="0.0449%" height="15" fill="rgb(239,54,39)" fg:x="568" fg:w="1"/><text x="25.7437%" y="239.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.09%)</title><rect x="25.5386%" y="261" width="0.0898%" height="15" fill="rgb(230,99,41)" fg:x="569" fg:w="2"/><text x="25.7886%" y="271.50"></text></g><g><title>ahc032_a::State::try_apply (44 samples, 1.97%)</title><rect x="24.0575%" y="277" width="1.9749%" height="15" fill="rgb(253,106,12)" fg:x="536" fg:w="44"/><text x="24.3075%" y="287.50">a..</text></g><g><title>compiler_builtins::int::specialized_div_rem::u128_div_rem (9 samples, 0.40%)</title><rect x="25.6284%" y="261" width="0.4039%" height="15" fill="rgb(213,46,41)" fg:x="571" fg:w="9"/><text x="25.8784%" y="271.50"></text></g><g><title>core::num::&lt;impl u128&gt;::leading_zeros (7 samples, 0.31%)</title><rect x="25.7181%" y="245" width="0.3142%" height="15" fill="rgb(215,133,35)" fg:x="573" fg:w="7"/><text x="25.9681%" y="255.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::clone::Clone&gt;::clone (7 samples, 0.31%)</title><rect x="26.2567%" y="261" width="0.3142%" height="15" fill="rgb(213,28,5)" fg:x="585" fg:w="7"/><text x="26.5067%" y="271.50"></text></g><g><title>alloc::rc::RcInnerPtr::inc_strong (7 samples, 0.31%)</title><rect x="26.2567%" y="245" width="0.3142%" height="15" fill="rgb(215,77,49)" fg:x="585" fg:w="7"/><text x="26.5067%" y="255.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (7 samples, 0.31%)</title><rect x="26.2567%" y="229" width="0.3142%" height="15" fill="rgb(248,100,22)" fg:x="585" fg:w="7"/><text x="26.5067%" y="239.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (7 samples, 0.31%)</title><rect x="26.2567%" y="213" width="0.3142%" height="15" fill="rgb(208,67,9)" fg:x="585" fg:w="7"/><text x="26.5067%" y="223.50"></text></g><g><title>core::mem::replace (7 samples, 0.31%)</title><rect x="26.2567%" y="197" width="0.3142%" height="15" fill="rgb(219,133,21)" fg:x="585" fg:w="7"/><text x="26.5067%" y="207.50"></text></g><g><title>core::ptr::write (7 samples, 0.31%)</title><rect x="26.2567%" y="181" width="0.3142%" height="15" fill="rgb(246,46,29)" fg:x="585" fg:w="7"/><text x="26.5067%" y="191.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.18%)</title><rect x="26.5709%" y="261" width="0.1795%" height="15" fill="rgb(246,185,52)" fg:x="592" fg:w="4"/><text x="26.8209%" y="271.50"></text></g><g><title>core::ptr::read (4 samples, 0.18%)</title><rect x="26.5709%" y="245" width="0.1795%" height="15" fill="rgb(252,136,11)" fg:x="592" fg:w="4"/><text x="26.8209%" y="255.50"></text></g><g><title>ahc032_a::State::get_neighbor (15 samples, 0.67%)</title><rect x="26.7504%" y="261" width="0.6732%" height="15" fill="rgb(219,138,53)" fg:x="596" fg:w="15"/><text x="27.0004%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (13 samples, 0.58%)</title><rect x="26.8402%" y="245" width="0.5835%" height="15" fill="rgb(211,51,23)" fg:x="598" fg:w="13"/><text x="27.0902%" y="255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (2 samples, 0.09%)</title><rect x="28.7253%" y="245" width="0.0898%" height="15" fill="rgb(247,221,28)" fg:x="640" fg:w="2"/><text x="28.9753%" y="255.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (2 samples, 0.09%)</title><rect x="28.7253%" y="229" width="0.0898%" height="15" fill="rgb(251,222,45)" fg:x="640" fg:w="2"/><text x="28.9753%" y="239.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (2 samples, 0.09%)</title><rect x="28.7253%" y="213" width="0.0898%" height="15" fill="rgb(217,162,53)" fg:x="640" fg:w="2"/><text x="28.9753%" y="223.50"></text></g><g><title>ahc032_a::State::try_apply (45 samples, 2.02%)</title><rect x="27.4237%" y="261" width="2.0197%" height="15" fill="rgb(229,93,14)" fg:x="611" fg:w="45"/><text x="27.6737%" y="271.50">a..</text></g><g><title>compiler_builtins::int::specialized_div_rem::u128_div_rem (14 samples, 0.63%)</title><rect x="28.8151%" y="245" width="0.6284%" height="15" fill="rgb(209,67,49)" fg:x="642" fg:w="14"/><text x="29.0651%" y="255.50"></text></g><g><title>core::num::&lt;impl u128&gt;::leading_zeros (11 samples, 0.49%)</title><rect x="28.9497%" y="229" width="0.4937%" height="15" fill="rgb(213,87,29)" fg:x="645" fg:w="11"/><text x="29.1997%" y="239.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.09%)</title><rect x="29.6230%" y="245" width="0.0898%" height="15" fill="rgb(205,151,52)" fg:x="660" fg:w="2"/><text x="29.8730%" y="255.50"></text></g><g><title>alloc::rc::RcInnerPtr::inc_strong (2 samples, 0.09%)</title><rect x="29.6230%" y="229" width="0.0898%" height="15" fill="rgb(253,215,39)" fg:x="660" fg:w="2"/><text x="29.8730%" y="239.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (2 samples, 0.09%)</title><rect x="29.6230%" y="213" width="0.0898%" height="15" fill="rgb(221,220,41)" fg:x="660" fg:w="2"/><text x="29.8730%" y="223.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (2 samples, 0.09%)</title><rect x="29.6230%" y="197" width="0.0898%" height="15" fill="rgb(218,133,21)" fg:x="660" fg:w="2"/><text x="29.8730%" y="207.50"></text></g><g><title>core::mem::replace (2 samples, 0.09%)</title><rect x="29.6230%" y="181" width="0.0898%" height="15" fill="rgb(221,193,43)" fg:x="660" fg:w="2"/><text x="29.8730%" y="191.50"></text></g><g><title>core::ptr::write (2 samples, 0.09%)</title><rect x="29.6230%" y="165" width="0.0898%" height="15" fill="rgb(240,128,52)" fg:x="660" fg:w="2"/><text x="29.8730%" y="175.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.13%)</title><rect x="29.7127%" y="245" width="0.1346%" height="15" fill="rgb(253,114,12)" fg:x="662" fg:w="3"/><text x="29.9627%" y="255.50"></text></g><g><title>core::ptr::read (3 samples, 0.13%)</title><rect x="29.7127%" y="229" width="0.1346%" height="15" fill="rgb(215,223,47)" fg:x="662" fg:w="3"/><text x="29.9627%" y="239.50"></text></g><g><title>ahc032_a::State::get_neighbor (26 samples, 1.17%)</title><rect x="29.8474%" y="245" width="1.1670%" height="15" fill="rgb(248,225,23)" fg:x="665" fg:w="26"/><text x="30.0974%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (16 samples, 0.72%)</title><rect x="30.2962%" y="229" width="0.7181%" height="15" fill="rgb(250,108,0)" fg:x="675" fg:w="16"/><text x="30.5462%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.04%)</title><rect x="30.9695%" y="213" width="0.0449%" height="15" fill="rgb(228,208,7)" fg:x="690" fg:w="1"/><text x="31.2195%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.04%)</title><rect x="30.9695%" y="197" width="0.0449%" height="15" fill="rgb(244,45,10)" fg:x="690" fg:w="1"/><text x="31.2195%" y="207.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.04%)</title><rect x="30.9695%" y="181" width="0.0449%" height="15" fill="rgb(207,125,25)" fg:x="690" fg:w="1"/><text x="31.2195%" y="191.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.04%)</title><rect x="30.9695%" y="165" width="0.0449%" height="15" fill="rgb(210,195,18)" fg:x="690" fg:w="1"/><text x="31.2195%" y="175.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.04%)</title><rect x="30.9695%" y="149" width="0.0449%" height="15" fill="rgb(249,80,12)" fg:x="690" fg:w="1"/><text x="31.2195%" y="159.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.04%)</title><rect x="30.9695%" y="133" width="0.0449%" height="15" fill="rgb(221,65,9)" fg:x="690" fg:w="1"/><text x="31.2195%" y="143.50"></text></g><g><title>realloc (1 samples, 0.04%)</title><rect x="30.9695%" y="117" width="0.0449%" height="15" fill="rgb(235,49,36)" fg:x="690" fg:w="1"/><text x="31.2195%" y="127.50"></text></g><g><title>[libc.so.6] (1 samples, 0.04%)</title><rect x="30.9695%" y="101" width="0.0449%" height="15" fill="rgb(225,32,20)" fg:x="690" fg:w="1"/><text x="31.2195%" y="111.50"></text></g><g><title>[libc.so.6] (1 samples, 0.04%)</title><rect x="30.9695%" y="85" width="0.0449%" height="15" fill="rgb(215,141,46)" fg:x="690" fg:w="1"/><text x="31.2195%" y="95.50"></text></g><g><title>ahc032_a::State::try_apply (40 samples, 1.80%)</title><rect x="31.0144%" y="245" width="1.7953%" height="15" fill="rgb(250,160,47)" fg:x="691" fg:w="40"/><text x="31.2644%" y="255.50">a..</text></g><g><title>compiler_builtins::int::specialized_div_rem::u128_div_rem (14 samples, 0.63%)</title><rect x="32.1813%" y="229" width="0.6284%" height="15" fill="rgb(216,222,40)" fg:x="717" fg:w="14"/><text x="32.4313%" y="239.50"></text></g><g><title>core::num::&lt;impl u128&gt;::leading_zeros (10 samples, 0.45%)</title><rect x="32.3609%" y="213" width="0.4488%" height="15" fill="rgb(234,217,39)" fg:x="721" fg:w="10"/><text x="32.6109%" y="223.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.13%)</title><rect x="32.8546%" y="229" width="0.1346%" height="15" fill="rgb(207,178,40)" fg:x="732" fg:w="3"/><text x="33.1046%" y="239.50"></text></g><g><title>alloc::rc::RcInnerPtr::inc_strong (3 samples, 0.13%)</title><rect x="32.8546%" y="213" width="0.1346%" height="15" fill="rgb(221,136,13)" fg:x="732" fg:w="3"/><text x="33.1046%" y="223.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (3 samples, 0.13%)</title><rect x="32.8546%" y="197" width="0.1346%" height="15" fill="rgb(249,199,10)" fg:x="732" fg:w="3"/><text x="33.1046%" y="207.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (3 samples, 0.13%)</title><rect x="32.8546%" y="181" width="0.1346%" height="15" fill="rgb(249,222,13)" fg:x="732" fg:w="3"/><text x="33.1046%" y="191.50"></text></g><g><title>core::mem::replace (3 samples, 0.13%)</title><rect x="32.8546%" y="165" width="0.1346%" height="15" fill="rgb(244,185,38)" fg:x="732" fg:w="3"/><text x="33.1046%" y="175.50"></text></g><g><title>core::ptr::write (3 samples, 0.13%)</title><rect x="32.8546%" y="149" width="0.1346%" height="15" fill="rgb(236,202,9)" fg:x="732" fg:w="3"/><text x="33.1046%" y="159.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.09%)</title><rect x="32.9892%" y="229" width="0.0898%" height="15" fill="rgb(250,229,37)" fg:x="735" fg:w="2"/><text x="33.2392%" y="239.50"></text></g><g><title>core::ptr::read (2 samples, 0.09%)</title><rect x="32.9892%" y="213" width="0.0898%" height="15" fill="rgb(206,174,23)" fg:x="735" fg:w="2"/><text x="33.2392%" y="223.50"></text></g><g><title>ahc032_a::State::get_neighbor (24 samples, 1.08%)</title><rect x="33.0790%" y="229" width="1.0772%" height="15" fill="rgb(211,33,43)" fg:x="737" fg:w="24"/><text x="33.3290%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (16 samples, 0.72%)</title><rect x="33.4381%" y="213" width="0.7181%" height="15" fill="rgb(245,58,50)" fg:x="745" fg:w="16"/><text x="33.6881%" y="223.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (1 samples, 0.04%)</title><rect x="35.5476%" y="213" width="0.0449%" height="15" fill="rgb(244,68,36)" fg:x="792" fg:w="1"/><text x="35.7976%" y="223.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (1 samples, 0.04%)</title><rect x="35.5476%" y="197" width="0.0449%" height="15" fill="rgb(232,229,15)" fg:x="792" fg:w="1"/><text x="35.7976%" y="207.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (1 samples, 0.04%)</title><rect x="35.5476%" y="181" width="0.0449%" height="15" fill="rgb(254,30,23)" fg:x="792" fg:w="1"/><text x="35.7976%" y="191.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.04%)</title><rect x="35.5925%" y="213" width="0.0449%" height="15" fill="rgb(235,160,14)" fg:x="793" fg:w="1"/><text x="35.8425%" y="223.50"></text></g><g><title>ahc032_a::State::try_apply (44 samples, 1.97%)</title><rect x="34.1562%" y="229" width="1.9749%" height="15" fill="rgb(212,155,44)" fg:x="761" fg:w="44"/><text x="34.4062%" y="239.50">a..</text></g><g><title>compiler_builtins::int::specialized_div_rem::u128_div_rem (11 samples, 0.49%)</title><rect x="35.6373%" y="213" width="0.4937%" height="15" fill="rgb(226,2,50)" fg:x="794" fg:w="11"/><text x="35.8873%" y="223.50"></text></g><g><title>core::num::&lt;impl u128&gt;::leading_zeros (8 samples, 0.36%)</title><rect x="35.7720%" y="197" width="0.3591%" height="15" fill="rgb(234,177,6)" fg:x="797" fg:w="8"/><text x="36.0220%" y="207.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.09%)</title><rect x="36.2208%" y="213" width="0.0898%" height="15" fill="rgb(217,24,9)" fg:x="807" fg:w="2"/><text x="36.4708%" y="223.50"></text></g><g><title>alloc::rc::RcInnerPtr::inc_strong (2 samples, 0.09%)</title><rect x="36.2208%" y="197" width="0.0898%" height="15" fill="rgb(220,13,46)" fg:x="807" fg:w="2"/><text x="36.4708%" y="207.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (2 samples, 0.09%)</title><rect x="36.2208%" y="181" width="0.0898%" height="15" fill="rgb(239,221,27)" fg:x="807" fg:w="2"/><text x="36.4708%" y="191.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (2 samples, 0.09%)</title><rect x="36.2208%" y="165" width="0.0898%" height="15" fill="rgb(222,198,25)" fg:x="807" fg:w="2"/><text x="36.4708%" y="175.50"></text></g><g><title>core::mem::replace (2 samples, 0.09%)</title><rect x="36.2208%" y="149" width="0.0898%" height="15" fill="rgb(211,99,13)" fg:x="807" fg:w="2"/><text x="36.4708%" y="159.50"></text></g><g><title>core::ptr::write (2 samples, 0.09%)</title><rect x="36.2208%" y="133" width="0.0898%" height="15" fill="rgb(232,111,31)" fg:x="807" fg:w="2"/><text x="36.4708%" y="143.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.04%)</title><rect x="36.3106%" y="213" width="0.0449%" height="15" fill="rgb(245,82,37)" fg:x="809" fg:w="1"/><text x="36.5606%" y="223.50"></text></g><g><title>core::ptr::read (1 samples, 0.04%)</title><rect x="36.3106%" y="197" width="0.0449%" height="15" fill="rgb(227,149,46)" fg:x="809" fg:w="1"/><text x="36.5606%" y="207.50"></text></g><g><title>ahc032_a::State::get_neighbor (19 samples, 0.85%)</title><rect x="36.3555%" y="213" width="0.8528%" height="15" fill="rgb(218,36,50)" fg:x="810" fg:w="19"/><text x="36.6055%" y="223.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (12 samples, 0.54%)</title><rect x="36.6697%" y="197" width="0.5386%" height="15" fill="rgb(226,80,48)" fg:x="817" fg:w="12"/><text x="36.9197%" y="207.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (4 samples, 0.18%)</title><rect x="38.8689%" y="197" width="0.1795%" height="15" fill="rgb(238,224,15)" fg:x="866" fg:w="4"/><text x="39.1189%" y="207.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (4 samples, 0.18%)</title><rect x="38.8689%" y="181" width="0.1795%" height="15" fill="rgb(241,136,10)" fg:x="866" fg:w="4"/><text x="39.1189%" y="191.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (4 samples, 0.18%)</title><rect x="38.8689%" y="165" width="0.1795%" height="15" fill="rgb(208,32,45)" fg:x="866" fg:w="4"/><text x="39.1189%" y="175.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.04%)</title><rect x="39.0485%" y="197" width="0.0449%" height="15" fill="rgb(207,135,9)" fg:x="870" fg:w="1"/><text x="39.2985%" y="207.50"></text></g><g><title>ahc032_a::State::try_apply (52 samples, 2.33%)</title><rect x="37.2083%" y="213" width="2.3339%" height="15" fill="rgb(206,86,44)" fg:x="829" fg:w="52"/><text x="37.4583%" y="223.50">a..</text></g><g><title>compiler_builtins::int::specialized_div_rem::u128_div_rem (10 samples, 0.45%)</title><rect x="39.0934%" y="197" width="0.4488%" height="15" fill="rgb(245,177,15)" fg:x="871" fg:w="10"/><text x="39.3434%" y="207.50"></text></g><g><title>core::num::&lt;impl u128&gt;::leading_zeros (9 samples, 0.40%)</title><rect x="39.1382%" y="181" width="0.4039%" height="15" fill="rgb(206,64,50)" fg:x="872" fg:w="9"/><text x="39.3882%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.09%)</title><rect x="39.8564%" y="197" width="0.0898%" height="15" fill="rgb(234,36,40)" fg:x="888" fg:w="2"/><text x="40.1064%" y="207.50"></text></g><g><title>alloc::rc::RcInnerPtr::inc_strong (2 samples, 0.09%)</title><rect x="39.8564%" y="181" width="0.0898%" height="15" fill="rgb(213,64,8)" fg:x="888" fg:w="2"/><text x="40.1064%" y="191.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (2 samples, 0.09%)</title><rect x="39.8564%" y="165" width="0.0898%" height="15" fill="rgb(210,75,36)" fg:x="888" fg:w="2"/><text x="40.1064%" y="175.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (2 samples, 0.09%)</title><rect x="39.8564%" y="149" width="0.0898%" height="15" fill="rgb(229,88,21)" fg:x="888" fg:w="2"/><text x="40.1064%" y="159.50"></text></g><g><title>core::mem::replace (2 samples, 0.09%)</title><rect x="39.8564%" y="133" width="0.0898%" height="15" fill="rgb(252,204,47)" fg:x="888" fg:w="2"/><text x="40.1064%" y="143.50"></text></g><g><title>core::ptr::write (2 samples, 0.09%)</title><rect x="39.8564%" y="117" width="0.0898%" height="15" fill="rgb(208,77,27)" fg:x="888" fg:w="2"/><text x="40.1064%" y="127.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.04%)</title><rect x="39.9461%" y="197" width="0.0449%" height="15" fill="rgb(221,76,26)" fg:x="890" fg:w="1"/><text x="40.1961%" y="207.50"></text></g><g><title>core::ptr::read (1 samples, 0.04%)</title><rect x="39.9461%" y="181" width="0.0449%" height="15" fill="rgb(225,139,18)" fg:x="890" fg:w="1"/><text x="40.1961%" y="191.50"></text></g><g><title>ahc032_a::State::get_neighbor (17 samples, 0.76%)</title><rect x="39.9910%" y="197" width="0.7630%" height="15" fill="rgb(230,137,11)" fg:x="891" fg:w="17"/><text x="40.2410%" y="207.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (11 samples, 0.49%)</title><rect x="40.2603%" y="181" width="0.4937%" height="15" fill="rgb(212,28,1)" fg:x="897" fg:w="11"/><text x="40.5103%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.04%)</title><rect x="40.7092%" y="165" width="0.0449%" height="15" fill="rgb(248,164,17)" fg:x="907" fg:w="1"/><text x="40.9592%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.04%)</title><rect x="40.7092%" y="149" width="0.0449%" height="15" fill="rgb(222,171,42)" fg:x="907" fg:w="1"/><text x="40.9592%" y="159.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.04%)</title><rect x="40.7092%" y="133" width="0.0449%" height="15" fill="rgb(243,84,45)" fg:x="907" fg:w="1"/><text x="40.9592%" y="143.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.04%)</title><rect x="40.7092%" y="117" width="0.0449%" height="15" fill="rgb(252,49,23)" fg:x="907" fg:w="1"/><text x="40.9592%" y="127.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.04%)</title><rect x="40.7092%" y="101" width="0.0449%" height="15" fill="rgb(215,19,7)" fg:x="907" fg:w="1"/><text x="40.9592%" y="111.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.04%)</title><rect x="40.7092%" y="85" width="0.0449%" height="15" fill="rgb(238,81,41)" fg:x="907" fg:w="1"/><text x="40.9592%" y="95.50"></text></g><g><title>realloc (1 samples, 0.04%)</title><rect x="40.7092%" y="69" width="0.0449%" height="15" fill="rgb(210,199,37)" fg:x="907" fg:w="1"/><text x="40.9592%" y="79.50"></text></g><g><title>[libc.so.6] (1 samples, 0.04%)</title><rect x="40.7092%" y="53" width="0.0449%" height="15" fill="rgb(244,192,49)" fg:x="907" fg:w="1"/><text x="40.9592%" y="63.50"></text></g><g><title>[libc.so.6] (1 samples, 0.04%)</title><rect x="40.7092%" y="37" width="0.0449%" height="15" fill="rgb(226,211,11)" fg:x="907" fg:w="1"/><text x="40.9592%" y="47.50"></text></g><g><title>&lt;ahc032_a::grid::Map2d&lt;T&gt; as core::ops::index::Index&lt;ahc032_a::grid::Coordinate&gt;&gt;::index (1 samples, 0.04%)</title><rect x="42.3698%" y="181" width="0.0449%" height="15" fill="rgb(236,162,54)" fg:x="944" fg:w="1"/><text x="42.6198%" y="191.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (1 samples, 0.04%)</title><rect x="42.3698%" y="165" width="0.0449%" height="15" fill="rgb(220,229,9)" fg:x="944" fg:w="1"/><text x="42.6198%" y="175.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (1 samples, 0.04%)</title><rect x="42.3698%" y="149" width="0.0449%" height="15" fill="rgb(250,87,22)" fg:x="944" fg:w="1"/><text x="42.6198%" y="159.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (1 samples, 0.04%)</title><rect x="42.3698%" y="133" width="0.0449%" height="15" fill="rgb(239,43,17)" fg:x="944" fg:w="1"/><text x="42.6198%" y="143.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (1 samples, 0.04%)</title><rect x="42.4147%" y="181" width="0.0449%" height="15" fill="rgb(231,177,25)" fg:x="945" fg:w="1"/><text x="42.6647%" y="191.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (1 samples, 0.04%)</title><rect x="42.4147%" y="165" width="0.0449%" height="15" fill="rgb(219,179,1)" fg:x="945" fg:w="1"/><text x="42.6647%" y="175.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (1 samples, 0.04%)</title><rect x="42.4147%" y="149" width="0.0449%" height="15" fill="rgb(238,219,53)" fg:x="945" fg:w="1"/><text x="42.6647%" y="159.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.04%)</title><rect x="42.4596%" y="181" width="0.0449%" height="15" fill="rgb(232,167,36)" fg:x="946" fg:w="1"/><text x="42.7096%" y="191.50"></text></g><g><title>ahc032_a::State::try_apply (51 samples, 2.29%)</title><rect x="40.7540%" y="197" width="2.2890%" height="15" fill="rgb(244,19,51)" fg:x="908" fg:w="51"/><text x="41.0040%" y="207.50">a..</text></g><g><title>compiler_builtins::int::specialized_div_rem::u128_div_rem (12 samples, 0.54%)</title><rect x="42.5045%" y="181" width="0.5386%" height="15" fill="rgb(224,6,22)" fg:x="947" fg:w="12"/><text x="42.7545%" y="191.50"></text></g><g><title>core::num::&lt;impl u128&gt;::leading_zeros (7 samples, 0.31%)</title><rect x="42.7289%" y="165" width="0.3142%" height="15" fill="rgb(224,145,5)" fg:x="952" fg:w="7"/><text x="42.9789%" y="175.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.13%)</title><rect x="43.1329%" y="181" width="0.1346%" height="15" fill="rgb(234,130,49)" fg:x="961" fg:w="3"/><text x="43.3829%" y="191.50"></text></g><g><title>core::ptr::read (3 samples, 0.13%)</title><rect x="43.1329%" y="165" width="0.1346%" height="15" fill="rgb(254,6,2)" fg:x="961" fg:w="3"/><text x="43.3829%" y="175.50"></text></g><g><title>ahc032_a::State::get_neighbor (19 samples, 0.85%)</title><rect x="43.2675%" y="181" width="0.8528%" height="15" fill="rgb(208,96,46)" fg:x="964" fg:w="19"/><text x="43.5175%" y="191.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (14 samples, 0.63%)</title><rect x="43.4919%" y="165" width="0.6284%" height="15" fill="rgb(239,3,39)" fg:x="969" fg:w="14"/><text x="43.7419%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.04%)</title><rect x="44.0754%" y="149" width="0.0449%" height="15" fill="rgb(233,210,1)" fg:x="982" fg:w="1"/><text x="44.3254%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.04%)</title><rect x="44.0754%" y="133" width="0.0449%" height="15" fill="rgb(244,137,37)" fg:x="982" fg:w="1"/><text x="44.3254%" y="143.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.04%)</title><rect x="44.0754%" y="117" width="0.0449%" height="15" fill="rgb(240,136,2)" fg:x="982" fg:w="1"/><text x="44.3254%" y="127.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.04%)</title><rect x="44.0754%" y="101" width="0.0449%" height="15" fill="rgb(239,18,37)" fg:x="982" fg:w="1"/><text x="44.3254%" y="111.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.04%)</title><rect x="44.0754%" y="85" width="0.0449%" height="15" fill="rgb(218,185,22)" fg:x="982" fg:w="1"/><text x="44.3254%" y="95.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.04%)</title><rect x="44.0754%" y="69" width="0.0449%" height="15" fill="rgb(225,218,4)" fg:x="982" fg:w="1"/><text x="44.3254%" y="79.50"></text></g><g><title>realloc (1 samples, 0.04%)</title><rect x="44.0754%" y="53" width="0.0449%" height="15" fill="rgb(230,182,32)" fg:x="982" fg:w="1"/><text x="44.3254%" y="63.50"></text></g><g><title>&lt;ahc032_a::grid::Coordinate as core::ops::arith::Add&lt;ahc032_a::grid::CoordinateDiff&gt;&gt;::add (3 samples, 0.13%)</title><rect x="48.4291%" y="165" width="0.1346%" height="15" fill="rgb(242,56,43)" fg:x="1079" fg:w="3"/><text x="48.6791%" y="175.50"></text></g><g><title>core::num::&lt;impl usize&gt;::wrapping_add (3 samples, 0.13%)</title><rect x="48.4291%" y="149" width="0.1346%" height="15" fill="rgb(233,99,24)" fg:x="1079" fg:w="3"/><text x="48.6791%" y="159.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (1 samples, 0.04%)</title><rect x="48.5637%" y="165" width="0.0449%" height="15" fill="rgb(234,209,42)" fg:x="1082" fg:w="1"/><text x="48.8137%" y="175.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (1 samples, 0.04%)</title><rect x="48.5637%" y="149" width="0.0449%" height="15" fill="rgb(227,7,12)" fg:x="1082" fg:w="1"/><text x="48.8137%" y="159.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (1 samples, 0.04%)</title><rect x="48.5637%" y="133" width="0.0449%" height="15" fill="rgb(245,203,43)" fg:x="1082" fg:w="1"/><text x="48.8137%" y="143.50"></text></g><g><title>ahc032_a::State::try_apply (107 samples, 4.80%)</title><rect x="44.1203%" y="181" width="4.8025%" height="15" fill="rgb(238,205,33)" fg:x="983" fg:w="107"/><text x="44.3703%" y="191.50">ahc032..</text></g><g><title>compiler_builtins::int::specialized_div_rem::u128_div_rem (7 samples, 0.31%)</title><rect x="48.6086%" y="165" width="0.3142%" height="15" fill="rgb(231,56,7)" fg:x="1083" fg:w="7"/><text x="48.8586%" y="175.50"></text></g><g><title>core::num::&lt;impl u128&gt;::leading_zeros (4 samples, 0.18%)</title><rect x="48.7433%" y="149" width="0.1795%" height="15" fill="rgb(244,186,29)" fg:x="1086" fg:w="4"/><text x="48.9933%" y="159.50"></text></g><g><title>ahc032_a::Tree::dfs (135 samples, 6.06%)</title><rect x="43.0431%" y="197" width="6.0592%" height="15" fill="rgb(234,111,31)" fg:x="959" fg:w="135"/><text x="43.2931%" y="207.50">ahc032_a..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (4 samples, 0.18%)</title><rect x="48.9228%" y="181" width="0.1795%" height="15" fill="rgb(241,149,10)" fg:x="1090" fg:w="4"/><text x="49.1728%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::capacity (2 samples, 0.09%)</title><rect x="49.0126%" y="165" width="0.0898%" height="15" fill="rgb(249,206,44)" fg:x="1092" fg:w="2"/><text x="49.2626%" y="175.50"></text></g><g><title>ahc032_a::Tree::dfs (218 samples, 9.78%)</title><rect x="39.5422%" y="213" width="9.7846%" height="15" fill="rgb(251,153,30)" fg:x="881" fg:w="218"/><text x="39.7922%" y="223.50">ahc032_a::Tree..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (5 samples, 0.22%)</title><rect x="49.1023%" y="197" width="0.2244%" height="15" fill="rgb(239,152,38)" fg:x="1094" fg:w="5"/><text x="49.3523%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::capacity (2 samples, 0.09%)</title><rect x="49.2370%" y="181" width="0.0898%" height="15" fill="rgb(249,139,47)" fg:x="1097" fg:w="2"/><text x="49.4870%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::capacity (3 samples, 0.13%)</title><rect x="49.4614%" y="197" width="0.1346%" height="15" fill="rgb(244,64,35)" fg:x="1102" fg:w="3"/><text x="49.7114%" y="207.50"></text></g><g><title>ahc032_a::Tree::dfs (301 samples, 13.51%)</title><rect x="36.1311%" y="229" width="13.5099%" height="15" fill="rgb(216,46,15)" fg:x="805" fg:w="301"/><text x="36.3811%" y="239.50">ahc032_a::Tree::dfs</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (7 samples, 0.31%)</title><rect x="49.3268%" y="213" width="0.3142%" height="15" fill="rgb(250,74,19)" fg:x="1099" fg:w="7"/><text x="49.5768%" y="223.50"></text></g><g><title>core::ptr::write (1 samples, 0.04%)</title><rect x="49.5961%" y="197" width="0.0449%" height="15" fill="rgb(249,42,33)" fg:x="1105" fg:w="1"/><text x="49.8461%" y="207.50"></text></g><g><title>ahc032_a::Tree::dfs (385 samples, 17.28%)</title><rect x="32.8097%" y="245" width="17.2801%" height="15" fill="rgb(242,149,17)" fg:x="731" fg:w="385"/><text x="33.0597%" y="255.50">ahc032_a::Tree::dfs</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (10 samples, 0.45%)</title><rect x="49.6409%" y="229" width="0.4488%" height="15" fill="rgb(244,29,21)" fg:x="1106" fg:w="10"/><text x="49.8909%" y="239.50"></text></g><g><title>core::ptr::write (3 samples, 0.13%)</title><rect x="49.9551%" y="213" width="0.1346%" height="15" fill="rgb(220,130,37)" fg:x="1113" fg:w="3"/><text x="50.2051%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::capacity (4 samples, 0.18%)</title><rect x="50.2693%" y="229" width="0.1795%" height="15" fill="rgb(211,67,2)" fg:x="1120" fg:w="4"/><text x="50.5193%" y="239.50"></text></g><g><title>ahc032_a::Tree::dfs (469 samples, 21.05%)</title><rect x="29.4434%" y="261" width="21.0503%" height="15" fill="rgb(235,68,52)" fg:x="656" fg:w="469"/><text x="29.6934%" y="271.50">ahc032_a::Tree::dfs</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (9 samples, 0.40%)</title><rect x="50.0898%" y="245" width="0.4039%" height="15" fill="rgb(246,142,3)" fg:x="1116" fg:w="9"/><text x="50.3398%" y="255.50"></text></g><g><title>core::ptr::write (1 samples, 0.04%)</title><rect x="50.4488%" y="229" width="0.0449%" height="15" fill="rgb(241,25,7)" fg:x="1124" fg:w="1"/><text x="50.6988%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::capacity (3 samples, 0.13%)</title><rect x="50.6284%" y="245" width="0.1346%" height="15" fill="rgb(242,119,39)" fg:x="1128" fg:w="3"/><text x="50.8784%" y="255.50"></text></g><g><title>ahc032_a::Tree::dfs (552 samples, 24.78%)</title><rect x="26.0323%" y="277" width="24.7756%" height="15" fill="rgb(241,98,45)" fg:x="580" fg:w="552"/><text x="26.2823%" y="287.50">ahc032_a::Tree::dfs</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (7 samples, 0.31%)</title><rect x="50.4937%" y="261" width="0.3142%" height="15" fill="rgb(254,28,30)" fg:x="1125" fg:w="7"/><text x="50.7437%" y="271.50"></text></g><g><title>core::ptr::write (1 samples, 0.04%)</title><rect x="50.7630%" y="245" width="0.0449%" height="15" fill="rgb(241,142,54)" fg:x="1131" fg:w="1"/><text x="51.0130%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::capacity (3 samples, 0.13%)</title><rect x="50.8977%" y="261" width="0.1346%" height="15" fill="rgb(222,85,15)" fg:x="1134" fg:w="3"/><text x="51.1477%" y="271.50"></text></g><g><title>ahc032_a::Tree::dfs (633 samples, 28.41%)</title><rect x="22.7110%" y="293" width="28.4111%" height="15" fill="rgb(210,85,47)" fg:x="506" fg:w="633"/><text x="22.9610%" y="303.50">ahc032_a::Tree::dfs</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (7 samples, 0.31%)</title><rect x="50.8079%" y="277" width="0.3142%" height="15" fill="rgb(224,206,25)" fg:x="1132" fg:w="7"/><text x="51.0579%" y="287.50"></text></g><g><title>core::ptr::write (2 samples, 0.09%)</title><rect x="51.0323%" y="261" width="0.0898%" height="15" fill="rgb(243,201,19)" fg:x="1137" fg:w="2"/><text x="51.2823%" y="271.50"></text></g><g><title>ahc032_a::Tree::dfs (720 samples, 32.32%)</title><rect x="19.0754%" y="405" width="32.3160%" height="15" fill="rgb(236,59,4)" fg:x="425" fg:w="720"/><text x="19.3254%" y="415.50">ahc032_a::Tree::dfs</text></g><g><title>ahc032_a::Tree::dfs (719 samples, 32.27%)</title><rect x="19.1203%" y="389" width="32.2711%" height="15" fill="rgb(254,179,45)" fg:x="426" fg:w="719"/><text x="19.3703%" y="399.50">ahc032_a::Tree::dfs</text></g><g><title>ahc032_a::Tree::dfs (718 samples, 32.23%)</title><rect x="19.1652%" y="373" width="32.2262%" height="15" fill="rgb(226,14,10)" fg:x="427" fg:w="718"/><text x="19.4152%" y="383.50">ahc032_a::Tree::dfs</text></g><g><title>ahc032_a::Tree::dfs (718 samples, 32.23%)</title><rect x="19.1652%" y="357" width="32.2262%" height="15" fill="rgb(244,27,41)" fg:x="427" fg:w="718"/><text x="19.4152%" y="367.50">ahc032_a::Tree::dfs</text></g><g><title>ahc032_a::Tree::dfs (717 samples, 32.18%)</title><rect x="19.2101%" y="341" width="32.1813%" height="15" fill="rgb(235,35,32)" fg:x="428" fg:w="717"/><text x="19.4601%" y="351.50">ahc032_a::Tree::dfs</text></g><g><title>ahc032_a::Tree::dfs (716 samples, 32.14%)</title><rect x="19.2549%" y="325" width="32.1364%" height="15" fill="rgb(218,68,31)" fg:x="429" fg:w="716"/><text x="19.5049%" y="335.50">ahc032_a::Tree::dfs</text></g><g><title>ahc032_a::Tree::dfs (716 samples, 32.14%)</title><rect x="19.2549%" y="309" width="32.1364%" height="15" fill="rgb(207,120,37)" fg:x="429" fg:w="716"/><text x="19.5049%" y="319.50">ahc032_a::Tree::dfs</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (6 samples, 0.27%)</title><rect x="51.1221%" y="293" width="0.2693%" height="15" fill="rgb(227,98,0)" fg:x="1139" fg:w="6"/><text x="51.3721%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::capacity (3 samples, 0.13%)</title><rect x="51.2567%" y="277" width="0.1346%" height="15" fill="rgb(207,7,3)" fg:x="1142" fg:w="3"/><text x="51.5067%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::capacity (3 samples, 0.13%)</title><rect x="51.4811%" y="389" width="0.1346%" height="15" fill="rgb(206,98,19)" fg:x="1147" fg:w="3"/><text x="51.7311%" y="399.50"></text></g><g><title>ahc032_a::Tree::dfs (807 samples, 36.22%)</title><rect x="15.4399%" y="517" width="36.2208%" height="15" fill="rgb(217,5,26)" fg:x="344" fg:w="807"/><text x="15.6899%" y="527.50">ahc032_a::Tree::dfs</text></g><g><title>ahc032_a::Tree::dfs (807 samples, 36.22%)</title><rect x="15.4399%" y="501" width="36.2208%" height="15" fill="rgb(235,190,38)" fg:x="344" fg:w="807"/><text x="15.6899%" y="511.50">ahc032_a::Tree::dfs</text></g><g><title>ahc032_a::Tree::dfs (807 samples, 36.22%)</title><rect x="15.4399%" y="485" width="36.2208%" height="15" fill="rgb(247,86,24)" fg:x="344" fg:w="807"/><text x="15.6899%" y="495.50">ahc032_a::Tree::dfs</text></g><g><title>ahc032_a::Tree::dfs (806 samples, 36.18%)</title><rect x="15.4847%" y="469" width="36.1759%" height="15" fill="rgb(205,101,16)" fg:x="345" fg:w="806"/><text x="15.7347%" y="479.50">ahc032_a::Tree::dfs</text></g><g><title>ahc032_a::Tree::dfs (806 samples, 36.18%)</title><rect x="15.4847%" y="453" width="36.1759%" height="15" fill="rgb(246,168,33)" fg:x="345" fg:w="806"/><text x="15.7347%" y="463.50">ahc032_a::Tree::dfs</text></g><g><title>ahc032_a::Tree::dfs (805 samples, 36.13%)</title><rect x="15.5296%" y="437" width="36.1311%" height="15" fill="rgb(231,114,1)" fg:x="346" fg:w="805"/><text x="15.7796%" y="447.50">ahc032_a::Tree::dfs</text></g><g><title>ahc032_a::Tree::dfs (805 samples, 36.13%)</title><rect x="15.5296%" y="421" width="36.1311%" height="15" fill="rgb(207,184,53)" fg:x="346" fg:w="805"/><text x="15.7796%" y="431.50">ahc032_a::Tree::dfs</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (6 samples, 0.27%)</title><rect x="51.3914%" y="405" width="0.2693%" height="15" fill="rgb(224,95,51)" fg:x="1145" fg:w="6"/><text x="51.6414%" y="415.50"></text></g><g><title>core::ptr::write (1 samples, 0.04%)</title><rect x="51.6158%" y="389" width="0.0449%" height="15" fill="rgb(212,188,45)" fg:x="1150" fg:w="1"/><text x="51.8658%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::capacity (1 samples, 0.04%)</title><rect x="51.7953%" y="501" width="0.0449%" height="15" fill="rgb(223,154,38)" fg:x="1154" fg:w="1"/><text x="52.0453%" y="511.50"></text></g><g><title>ahc032_a::Tree::dfs (895 samples, 40.17%)</title><rect x="11.7594%" y="565" width="40.1706%" height="15" fill="rgb(251,22,52)" fg:x="262" fg:w="895"/><text x="12.0094%" y="575.50">ahc032_a::Tree::dfs</text></g><g><title>ahc032_a::Tree::dfs (894 samples, 40.13%)</title><rect x="11.8043%" y="549" width="40.1257%" height="15" fill="rgb(229,209,22)" fg:x="263" fg:w="894"/><text x="12.0543%" y="559.50">ahc032_a::Tree::dfs</text></g><g><title>ahc032_a::Tree::dfs (894 samples, 40.13%)</title><rect x="11.8043%" y="533" width="40.1257%" height="15" fill="rgb(234,138,34)" fg:x="263" fg:w="894"/><text x="12.0543%" y="543.50">ahc032_a::Tree::dfs</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (6 samples, 0.27%)</title><rect x="51.6607%" y="517" width="0.2693%" height="15" fill="rgb(212,95,11)" fg:x="1151" fg:w="6"/><text x="51.9107%" y="527.50"></text></g><g><title>core::ptr::write (2 samples, 0.09%)</title><rect x="51.8402%" y="501" width="0.0898%" height="15" fill="rgb(240,179,47)" fg:x="1155" fg:w="2"/><text x="52.0902%" y="511.50"></text></g><g><title>ahc032_a::Tree::dfs (900 samples, 40.39%)</title><rect x="11.5799%" y="629" width="40.3950%" height="15" fill="rgb(240,163,11)" fg:x="258" fg:w="900"/><text x="11.8299%" y="639.50">ahc032_a::Tree::dfs</text></g><g><title>ahc032_a::Tree::dfs (899 samples, 40.35%)</title><rect x="11.6248%" y="613" width="40.3501%" height="15" fill="rgb(236,37,12)" fg:x="259" fg:w="899"/><text x="11.8748%" y="623.50">ahc032_a::Tree::dfs</text></g><g><title>ahc032_a::Tree::dfs (899 samples, 40.35%)</title><rect x="11.6248%" y="597" width="40.3501%" height="15" fill="rgb(232,164,16)" fg:x="259" fg:w="899"/><text x="11.8748%" y="607.50">ahc032_a::Tree::dfs</text></g><g><title>ahc032_a::Tree::dfs (897 samples, 40.26%)</title><rect x="11.7145%" y="581" width="40.2603%" height="15" fill="rgb(244,205,15)" fg:x="261" fg:w="897"/><text x="11.9645%" y="591.50">ahc032_a::Tree::dfs</text></g><g><title>alloc::rc::Weak&lt;T,A&gt;::upgrade (1 samples, 0.04%)</title><rect x="51.9300%" y="565" width="0.0449%" height="15" fill="rgb(223,117,47)" fg:x="1157" fg:w="1"/><text x="52.1800%" y="575.50"></text></g><g><title>alloc::rc::Weak&lt;T,A&gt;::inner (1 samples, 0.04%)</title><rect x="51.9300%" y="549" width="0.0449%" height="15" fill="rgb(244,107,35)" fg:x="1157" fg:w="1"/><text x="52.1800%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (6 samples, 0.27%)</title><rect x="51.9749%" y="629" width="0.2693%" height="15" fill="rgb(205,140,8)" fg:x="1158" fg:w="6"/><text x="52.2249%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::capacity (3 samples, 0.13%)</title><rect x="52.1095%" y="613" width="0.1346%" height="15" fill="rgb(228,84,46)" fg:x="1161" fg:w="3"/><text x="52.3595%" y="623.50"></text></g><g><title>ahc032_a::Tree::dfs (994 samples, 44.61%)</title><rect x="7.6750%" y="741" width="44.6140%" height="15" fill="rgb(254,188,9)" fg:x="171" fg:w="994"/><text x="7.9250%" y="751.50">ahc032_a::Tree::dfs</text></g><g><title>ahc032_a::Tree::dfs (994 samples, 44.61%)</title><rect x="7.6750%" y="725" width="44.6140%" height="15" fill="rgb(206,112,54)" fg:x="171" fg:w="994"/><text x="7.9250%" y="735.50">ahc032_a::Tree::dfs</text></g><g><title>ahc032_a::Tree::dfs (992 samples, 44.52%)</title><rect x="7.7648%" y="709" width="44.5242%" height="15" fill="rgb(216,84,49)" fg:x="173" fg:w="992"/><text x="8.0148%" y="719.50">ahc032_a::Tree::dfs</text></g><g><title>ahc032_a::Tree::dfs (992 samples, 44.52%)</title><rect x="7.7648%" y="693" width="44.5242%" height="15" fill="rgb(214,194,35)" fg:x="173" fg:w="992"/><text x="8.0148%" y="703.50">ahc032_a::Tree::dfs</text></g><g><title>ahc032_a::Tree::dfs (991 samples, 44.48%)</title><rect x="7.8097%" y="677" width="44.4794%" height="15" fill="rgb(249,28,3)" fg:x="174" fg:w="991"/><text x="8.0597%" y="687.50">ahc032_a::Tree::dfs</text></g><g><title>ahc032_a::Tree::dfs (989 samples, 44.39%)</title><rect x="7.8995%" y="661" width="44.3896%" height="15" fill="rgb(222,56,52)" fg:x="176" fg:w="989"/><text x="8.1495%" y="671.50">ahc032_a::Tree::dfs</text></g><g><title>ahc032_a::Tree::dfs (987 samples, 44.30%)</title><rect x="7.9892%" y="645" width="44.2998%" height="15" fill="rgb(245,217,50)" fg:x="178" fg:w="987"/><text x="8.2392%" y="655.50">ahc032_a::Tree::dfs</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;u128&gt;&gt; (1 samples, 0.04%)</title><rect x="52.2442%" y="629" width="0.0449%" height="15" fill="rgb(213,201,24)" fg:x="1164" fg:w="1"/><text x="52.4942%" y="639.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.04%)</title><rect x="52.2442%" y="613" width="0.0449%" height="15" fill="rgb(248,116,28)" fg:x="1164" fg:w="1"/><text x="52.4942%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;u128,alloc::alloc::Global&gt;&gt; (1 samples, 0.04%)</title><rect x="52.2442%" y="597" width="0.0449%" height="15" fill="rgb(219,72,43)" fg:x="1164" fg:w="1"/><text x="52.4942%" y="607.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.04%)</title><rect x="52.2442%" y="581" width="0.0449%" height="15" fill="rgb(209,138,14)" fg:x="1164" fg:w="1"/><text x="52.4942%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u128&gt;&gt; (1 samples, 0.04%)</title><rect x="52.2442%" y="565" width="0.0449%" height="15" fill="rgb(222,18,33)" fg:x="1164" fg:w="1"/><text x="52.4942%" y="575.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.04%)</title><rect x="52.2442%" y="549" width="0.0449%" height="15" fill="rgb(213,199,7)" fg:x="1164" fg:w="1"/><text x="52.4942%" y="559.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.04%)</title><rect x="52.2442%" y="533" width="0.0449%" height="15" fill="rgb(250,110,10)" fg:x="1164" fg:w="1"/><text x="52.4942%" y="543.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.04%)</title><rect x="52.2442%" y="517" width="0.0449%" height="15" fill="rgb(248,123,6)" fg:x="1164" fg:w="1"/><text x="52.4942%" y="527.50"></text></g><g><title>free (1 samples, 0.04%)</title><rect x="52.2442%" y="501" width="0.0449%" height="15" fill="rgb(206,91,31)" fg:x="1164" fg:w="1"/><text x="52.4942%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::capacity (2 samples, 0.09%)</title><rect x="52.3788%" y="725" width="0.0898%" height="15" fill="rgb(211,154,13)" fg:x="1167" fg:w="2"/><text x="52.6288%" y="735.50"></text></g><g><title>ahc032_a::Tree::dfs (1,081 samples, 48.52%)</title><rect x="4.0395%" y="773" width="48.5189%" height="15" fill="rgb(225,148,7)" fg:x="90" fg:w="1081"/><text x="4.2895%" y="783.50">ahc032_a::Tree::dfs</text></g><g><title>ahc032_a::Tree::dfs (1,081 samples, 48.52%)</title><rect x="4.0395%" y="757" width="48.5189%" height="15" fill="rgb(220,160,43)" fg:x="90" fg:w="1081"/><text x="4.2895%" y="767.50">ahc032_a::Tree::dfs</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (6 samples, 0.27%)</title><rect x="52.2890%" y="741" width="0.2693%" height="15" fill="rgb(213,52,39)" fg:x="1165" fg:w="6"/><text x="52.5390%" y="751.50"></text></g><g><title>core::ptr::write (2 samples, 0.09%)</title><rect x="52.4686%" y="725" width="0.0898%" height="15" fill="rgb(243,137,7)" fg:x="1169" fg:w="2"/><text x="52.7186%" y="735.50"></text></g><g><title>ahc032_a::Tree::dfs (1,083 samples, 48.61%)</title><rect x="3.9946%" y="853" width="48.6086%" height="15" fill="rgb(230,79,13)" fg:x="89" fg:w="1083"/><text x="4.2446%" y="863.50">ahc032_a::Tree::dfs</text></g><g><title>ahc032_a::Tree::dfs (1,082 samples, 48.56%)</title><rect x="4.0395%" y="837" width="48.5637%" height="15" fill="rgb(247,105,23)" fg:x="90" fg:w="1082"/><text x="4.2895%" y="847.50">ahc032_a::Tree::dfs</text></g><g><title>ahc032_a::Tree::dfs (1,082 samples, 48.56%)</title><rect x="4.0395%" y="821" width="48.5637%" height="15" fill="rgb(223,179,41)" fg:x="90" fg:w="1082"/><text x="4.2895%" y="831.50">ahc032_a::Tree::dfs</text></g><g><title>ahc032_a::Tree::dfs (1,082 samples, 48.56%)</title><rect x="4.0395%" y="805" width="48.5637%" height="15" fill="rgb(218,9,34)" fg:x="90" fg:w="1082"/><text x="4.2895%" y="815.50">ahc032_a::Tree::dfs</text></g><g><title>ahc032_a::Tree::dfs (1,082 samples, 48.56%)</title><rect x="4.0395%" y="789" width="48.5637%" height="15" fill="rgb(222,106,8)" fg:x="90" fg:w="1082"/><text x="4.2895%" y="799.50">ahc032_a::Tree::dfs</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;u128&gt;&gt; (1 samples, 0.04%)</title><rect x="52.5583%" y="773" width="0.0449%" height="15" fill="rgb(211,220,0)" fg:x="1171" fg:w="1"/><text x="52.8083%" y="783.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.04%)</title><rect x="52.5583%" y="757" width="0.0449%" height="15" fill="rgb(229,52,16)" fg:x="1171" fg:w="1"/><text x="52.8083%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;u128,alloc::alloc::Global&gt;&gt; (1 samples, 0.04%)</title><rect x="52.5583%" y="741" width="0.0449%" height="15" fill="rgb(212,155,18)" fg:x="1171" fg:w="1"/><text x="52.8083%" y="751.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.04%)</title><rect x="52.5583%" y="725" width="0.0449%" height="15" fill="rgb(242,21,14)" fg:x="1171" fg:w="1"/><text x="52.8083%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u128&gt;&gt; (1 samples, 0.04%)</title><rect x="52.5583%" y="709" width="0.0449%" height="15" fill="rgb(222,19,48)" fg:x="1171" fg:w="1"/><text x="52.8083%" y="719.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.04%)</title><rect x="52.5583%" y="693" width="0.0449%" height="15" fill="rgb(232,45,27)" fg:x="1171" fg:w="1"/><text x="52.8083%" y="703.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.04%)</title><rect x="52.5583%" y="677" width="0.0449%" height="15" fill="rgb(249,103,42)" fg:x="1171" fg:w="1"/><text x="52.8083%" y="687.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.04%)</title><rect x="52.5583%" y="661" width="0.0449%" height="15" fill="rgb(246,81,33)" fg:x="1171" fg:w="1"/><text x="52.8083%" y="671.50"></text></g><g><title>free (1 samples, 0.04%)</title><rect x="52.5583%" y="645" width="0.0449%" height="15" fill="rgb(252,33,42)" fg:x="1171" fg:w="1"/><text x="52.8083%" y="655.50"></text></g><g><title>[libc.so.6] (1 samples, 0.04%)</title><rect x="52.5583%" y="629" width="0.0449%" height="15" fill="rgb(209,212,41)" fg:x="1171" fg:w="1"/><text x="52.8083%" y="639.50"></text></g><g><title>[libc.so.6] (1 samples, 0.04%)</title><rect x="52.5583%" y="613" width="0.0449%" height="15" fill="rgb(207,154,6)" fg:x="1171" fg:w="1"/><text x="52.8083%" y="623.50"></text></g><g><title>[libc.so.6] (1 samples, 0.04%)</title><rect x="52.5583%" y="597" width="0.0449%" height="15" fill="rgb(223,64,47)" fg:x="1171" fg:w="1"/><text x="52.8083%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::capacity (2 samples, 0.09%)</title><rect x="52.8276%" y="837" width="0.0898%" height="15" fill="rgb(211,161,38)" fg:x="1177" fg:w="2"/><text x="53.0776%" y="847.50"></text></g><g><title>ahc032_a::Tree::dfs (1,481 samples, 66.47%)</title><rect x="0.0898%" y="965" width="66.4722%" height="15" fill="rgb(219,138,40)" fg:x="2" fg:w="1481"/><text x="0.3398%" y="975.50">ahc032_a::Tree::dfs</text></g><g><title>ahc032_a::Tree::dfs (1,481 samples, 66.47%)</title><rect x="0.0898%" y="949" width="66.4722%" height="15" fill="rgb(241,228,46)" fg:x="2" fg:w="1481"/><text x="0.3398%" y="959.50">ahc032_a::Tree::dfs</text></g><g><title>ahc032_a::Tree::dfs (1,481 samples, 66.47%)</title><rect x="0.0898%" y="933" width="66.4722%" height="15" fill="rgb(223,209,38)" fg:x="2" fg:w="1481"/><text x="0.3398%" y="943.50">ahc032_a::Tree::dfs</text></g><g><title>ahc032_a::Tree::dfs (1,480 samples, 66.43%)</title><rect x="0.1346%" y="917" width="66.4273%" height="15" fill="rgb(236,164,45)" fg:x="3" fg:w="1480"/><text x="0.3846%" y="927.50">ahc032_a::Tree::dfs</text></g><g><title>ahc032_a::Tree::dfs (1,480 samples, 66.43%)</title><rect x="0.1346%" y="901" width="66.4273%" height="15" fill="rgb(231,15,5)" fg:x="3" fg:w="1480"/><text x="0.3846%" y="911.50">ahc032_a::Tree::dfs</text></g><g><title>ahc032_a::Tree::dfs (1,479 samples, 66.38%)</title><rect x="0.1795%" y="885" width="66.3824%" height="15" fill="rgb(252,35,15)" fg:x="4" fg:w="1479"/><text x="0.4295%" y="895.50">ahc032_a::Tree::dfs</text></g><g><title>ahc032_a::Tree::dfs (1,478 samples, 66.34%)</title><rect x="0.2244%" y="869" width="66.3375%" height="15" fill="rgb(248,181,18)" fg:x="5" fg:w="1478"/><text x="0.4744%" y="879.50">ahc032_a::Tree::dfs</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (311 samples, 13.96%)</title><rect x="52.6032%" y="853" width="13.9587%" height="15" fill="rgb(233,39,42)" fg:x="1172" fg:w="311"/><text x="52.8532%" y="863.50">alloc::vec::Vec&lt;T,A&gt;:..</text></g><g><title>core::ptr::write (304 samples, 13.64%)</title><rect x="52.9174%" y="837" width="13.6445%" height="15" fill="rgb(238,110,33)" fg:x="1179" fg:w="304"/><text x="53.1674%" y="847.50">core::ptr::write</text></g><g><title>alloc::rc::Rc&lt;T,A&gt;::inner (1 samples, 0.04%)</title><rect x="73.8330%" y="885" width="0.0449%" height="15" fill="rgb(233,195,10)" fg:x="1645" fg:w="1"/><text x="74.0830%" y="895.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (1 samples, 0.04%)</title><rect x="73.8330%" y="869" width="0.0449%" height="15" fill="rgb(254,105,3)" fg:x="1645" fg:w="1"/><text x="74.0830%" y="879.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::truncate (236 samples, 10.59%)</title><rect x="66.5619%" y="965" width="10.5925%" height="15" fill="rgb(221,225,9)" fg:x="1483" fg:w="236"/><text x="66.8119%" y="975.50">alloc::vec::Vec..</text></g><g><title>core::ptr::drop_in_place&lt;[ahc032_a::Candidate]&gt; (236 samples, 10.59%)</title><rect x="66.5619%" y="949" width="10.5925%" height="15" fill="rgb(224,227,45)" fg:x="1483" fg:w="236"/><text x="66.8119%" y="959.50">core::ptr::drop..</text></g><g><title>core::ptr::drop_in_place&lt;ahc032_a::Candidate&gt; (74 samples, 3.32%)</title><rect x="73.8330%" y="933" width="3.3214%" height="15" fill="rgb(229,198,43)" fg:x="1645" fg:w="74"/><text x="74.0830%" y="943.50">cor..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;ahc032_a::Node&gt;&gt; (74 samples, 3.32%)</title><rect x="73.8330%" y="917" width="3.3214%" height="15" fill="rgb(206,209,35)" fg:x="1645" fg:w="74"/><text x="74.0830%" y="927.50">cor..</text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (74 samples, 3.32%)</title><rect x="73.8330%" y="901" width="3.3214%" height="15" fill="rgb(245,195,53)" fg:x="1645" fg:w="74"/><text x="74.0830%" y="911.50">&lt;al..</text></g><g><title>alloc::rc::RcInnerPtr::dec_strong (73 samples, 3.28%)</title><rect x="73.8779%" y="885" width="3.2765%" height="15" fill="rgb(240,92,26)" fg:x="1646" fg:w="73"/><text x="74.1279%" y="895.50">all..</text></g><g><title>core::cell::Cell&lt;T&gt;::set (54 samples, 2.42%)</title><rect x="74.7307%" y="869" width="2.4237%" height="15" fill="rgb(207,40,23)" fg:x="1665" fg:w="54"/><text x="74.9807%" y="879.50">co..</text></g><g><title>core::cell::Cell&lt;T&gt;::replace (54 samples, 2.42%)</title><rect x="74.7307%" y="853" width="2.4237%" height="15" fill="rgb(223,111,35)" fg:x="1665" fg:w="54"/><text x="74.9807%" y="863.50">co..</text></g><g><title>core::mem::replace (54 samples, 2.42%)</title><rect x="74.7307%" y="837" width="2.4237%" height="15" fill="rgb(229,147,28)" fg:x="1665" fg:w="54"/><text x="74.9807%" y="847.50">co..</text></g><g><title>core::ptr::write (54 samples, 2.42%)</title><rect x="74.7307%" y="821" width="2.4237%" height="15" fill="rgb(211,29,28)" fg:x="1665" fg:w="54"/><text x="74.9807%" y="831.50">co..</text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (10 samples, 0.45%)</title><rect x="78.0969%" y="885" width="0.4488%" height="15" fill="rgb(228,72,33)" fg:x="1740" fg:w="10"/><text x="78.3469%" y="895.50"></text></g><g><title>core::ptr::read (10 samples, 0.45%)</title><rect x="78.0969%" y="869" width="0.4488%" height="15" fill="rgb(205,214,31)" fg:x="1740" fg:w="10"/><text x="78.3469%" y="879.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (2 samples, 0.09%)</title><rect x="79.7127%" y="837" width="0.0898%" height="15" fill="rgb(224,111,15)" fg:x="1776" fg:w="2"/><text x="79.9627%" y="847.50"></text></g><g><title>core::iter::traits::iterator::Iterator::max_by_key (68 samples, 3.05%)</title><rect x="77.1544%" y="965" width="3.0521%" height="15" fill="rgb(253,21,26)" fg:x="1719" fg:w="68"/><text x="77.4044%" y="975.50">cor..</text></g><g><title>core::iter::traits::iterator::Iterator::max_by (68 samples, 3.05%)</title><rect x="77.1544%" y="949" width="3.0521%" height="15" fill="rgb(245,139,43)" fg:x="1719" fg:w="68"/><text x="77.4044%" y="959.50">cor..</text></g><g><title>core::iter::traits::iterator::Iterator::reduce (68 samples, 3.05%)</title><rect x="77.1544%" y="933" width="3.0521%" height="15" fill="rgb(252,170,7)" fg:x="1719" fg:w="68"/><text x="77.4044%" y="943.50">cor..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (68 samples, 3.05%)</title><rect x="77.1544%" y="917" width="3.0521%" height="15" fill="rgb(231,118,14)" fg:x="1719" fg:w="68"/><text x="77.4044%" y="927.50">&lt;co..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (68 samples, 3.05%)</title><rect x="77.1544%" y="901" width="3.0521%" height="15" fill="rgb(238,83,0)" fg:x="1719" fg:w="68"/><text x="77.4044%" y="911.50">cor..</text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (37 samples, 1.66%)</title><rect x="78.5458%" y="885" width="1.6607%" height="15" fill="rgb(221,39,39)" fg:x="1750" fg:w="37"/><text x="78.7958%" y="895.50"></text></g><g><title>core::iter::traits::iterator::Iterator::max_by::fold::{{closure}} (21 samples, 0.94%)</title><rect x="79.2639%" y="869" width="0.9425%" height="15" fill="rgb(222,119,46)" fg:x="1766" fg:w="21"/><text x="79.5139%" y="879.50"></text></g><g><title>core::cmp::max_by (21 samples, 0.94%)</title><rect x="79.2639%" y="853" width="0.9425%" height="15" fill="rgb(222,165,49)" fg:x="1766" fg:w="21"/><text x="79.5139%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;(usize,ahc032_a::Candidate)&gt; (9 samples, 0.40%)</title><rect x="79.8025%" y="837" width="0.4039%" height="15" fill="rgb(219,113,52)" fg:x="1778" fg:w="9"/><text x="80.0525%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;ahc032_a::Candidate&gt; (9 samples, 0.40%)</title><rect x="79.8025%" y="821" width="0.4039%" height="15" fill="rgb(214,7,15)" fg:x="1778" fg:w="9"/><text x="80.0525%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;ahc032_a::Node&gt;&gt; (9 samples, 0.40%)</title><rect x="79.8025%" y="805" width="0.4039%" height="15" fill="rgb(235,32,4)" fg:x="1778" fg:w="9"/><text x="80.0525%" y="815.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (9 samples, 0.40%)</title><rect x="79.8025%" y="789" width="0.4039%" height="15" fill="rgb(238,90,54)" fg:x="1778" fg:w="9"/><text x="80.0525%" y="799.50"></text></g><g><title>alloc::rc::RcInnerPtr::dec_strong (9 samples, 0.40%)</title><rect x="79.8025%" y="773" width="0.4039%" height="15" fill="rgb(213,208,19)" fg:x="1778" fg:w="9"/><text x="80.0525%" y="783.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (5 samples, 0.22%)</title><rect x="79.9820%" y="757" width="0.2244%" height="15" fill="rgb(233,156,4)" fg:x="1782" fg:w="5"/><text x="80.2320%" y="767.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (5 samples, 0.22%)</title><rect x="79.9820%" y="741" width="0.2244%" height="15" fill="rgb(207,194,5)" fg:x="1782" fg:w="5"/><text x="80.2320%" y="751.50"></text></g><g><title>core::mem::replace (5 samples, 0.22%)</title><rect x="79.9820%" y="725" width="0.2244%" height="15" fill="rgb(206,111,30)" fg:x="1782" fg:w="5"/><text x="80.2320%" y="735.50"></text></g><g><title>core::ptr::write (5 samples, 0.22%)</title><rect x="79.9820%" y="709" width="0.2244%" height="15" fill="rgb(243,70,54)" fg:x="1782" fg:w="5"/><text x="80.2320%" y="719.50"></text></g><g><title>core::ptr::read (15 samples, 0.67%)</title><rect x="81.1939%" y="837" width="0.6732%" height="15" fill="rgb(242,28,8)" fg:x="1809" fg:w="15"/><text x="81.4439%" y="847.50"></text></g><g><title>core::slice::sort::choose_pivot (47 samples, 2.11%)</title><rect x="80.2065%" y="917" width="2.1095%" height="15" fill="rgb(219,106,18)" fg:x="1787" fg:w="47"/><text x="80.4565%" y="927.50">c..</text></g><g><title>core::slice::&lt;impl [T]&gt;::reverse (47 samples, 2.11%)</title><rect x="80.2065%" y="901" width="2.1095%" height="15" fill="rgb(244,222,10)" fg:x="1787" fg:w="47"/><text x="80.4565%" y="911.50">c..</text></g><g><title>core::slice::&lt;impl [T]&gt;::reverse::revswap (47 samples, 2.11%)</title><rect x="80.2065%" y="885" width="2.1095%" height="15" fill="rgb(236,179,52)" fg:x="1787" fg:w="47"/><text x="80.4565%" y="895.50">c..</text></g><g><title>core::mem::swap (25 samples, 1.12%)</title><rect x="81.1939%" y="869" width="1.1221%" height="15" fill="rgb(213,23,39)" fg:x="1809" fg:w="25"/><text x="81.4439%" y="879.50"></text></g><g><title>core::mem::swap_simple (25 samples, 1.12%)</title><rect x="81.1939%" y="853" width="1.1221%" height="15" fill="rgb(238,48,10)" fg:x="1809" fg:w="25"/><text x="81.4439%" y="863.50"></text></g><g><title>core::ptr::write (10 samples, 0.45%)</title><rect x="81.8671%" y="837" width="0.4488%" height="15" fill="rgb(251,196,23)" fg:x="1824" fg:w="10"/><text x="82.1171%" y="847.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (74 samples, 3.32%)</title><rect x="85.7720%" y="885" width="3.3214%" height="15" fill="rgb(250,152,24)" fg:x="1911" fg:w="74"/><text x="86.0220%" y="895.50">cor..</text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (45 samples, 2.02%)</title><rect x="89.0934%" y="885" width="2.0197%" height="15" fill="rgb(209,150,17)" fg:x="1985" fg:w="45"/><text x="89.3434%" y="895.50">c..</text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (45 samples, 2.02%)</title><rect x="89.0934%" y="869" width="2.0197%" height="15" fill="rgb(234,202,34)" fg:x="1985" fg:w="45"/><text x="89.3434%" y="879.50">&lt;..</text></g><g><title>&lt;usize as core::iter::range::Step&gt;::forward_unchecked (6 samples, 0.27%)</title><rect x="90.8438%" y="853" width="0.2693%" height="15" fill="rgb(253,148,53)" fg:x="2024" fg:w="6"/><text x="91.0938%" y="863.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_add (6 samples, 0.27%)</title><rect x="90.8438%" y="837" width="0.2693%" height="15" fill="rgb(218,129,16)" fg:x="2024" fg:w="6"/><text x="91.0938%" y="847.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (5 samples, 0.22%)</title><rect x="91.1131%" y="885" width="0.2244%" height="15" fill="rgb(216,85,19)" fg:x="2030" fg:w="5"/><text x="91.3631%" y="895.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (1 samples, 0.04%)</title><rect x="91.3375%" y="885" width="0.0449%" height="15" fill="rgb(235,228,7)" fg:x="2035" fg:w="1"/><text x="91.5875%" y="895.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.04%)</title><rect x="91.3375%" y="869" width="0.0449%" height="15" fill="rgb(245,175,0)" fg:x="2035" fg:w="1"/><text x="91.5875%" y="879.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::select_nth_unstable_by_key::{{closure}} (191 samples, 8.57%)</title><rect x="91.3824%" y="885" width="8.5727%" height="15" fill="rgb(208,168,36)" fg:x="2036" fg:w="191"/><text x="91.6324%" y="895.50">core::slice:..</text></g><g><title>core::tuple::&lt;impl core::cmp::PartialOrd for (U,T)&gt;::lt (191 samples, 8.57%)</title><rect x="91.3824%" y="869" width="8.5727%" height="15" fill="rgb(246,171,24)" fg:x="2036" fg:w="191"/><text x="91.6324%" y="879.50">core::tuple:..</text></g><g><title>&lt;core::cmp::Reverse&lt;T&gt; as core::cmp::PartialOrd&gt;::partial_cmp (6 samples, 0.27%)</title><rect x="99.6858%" y="853" width="0.2693%" height="15" fill="rgb(215,142,24)" fg:x="2221" fg:w="6"/><text x="99.9358%" y="863.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::partial_cmp (6 samples, 0.27%)</title><rect x="99.6858%" y="837" width="0.2693%" height="15" fill="rgb(250,187,7)" fg:x="2221" fg:w="6"/><text x="99.9358%" y="847.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for usize&gt;::cmp (6 samples, 0.27%)</title><rect x="99.6858%" y="821" width="0.2693%" height="15" fill="rgb(228,66,33)" fg:x="2221" fg:w="6"/><text x="99.9358%" y="831.50"></text></g><g><title>all (2,228 samples, 100%)</title><rect x="0.0000%" y="1301" width="100.0000%" height="15" fill="rgb(234,215,21)" fg:x="0" fg:w="2228"/><text x="0.2500%" y="1311.50"></text></g><g><title>ahc032_a (2,228 samples, 100.00%)</title><rect x="0.0000%" y="1285" width="100.0000%" height="15" fill="rgb(222,191,20)" fg:x="0" fg:w="2228"/><text x="0.2500%" y="1295.50">ahc032_a</text></g><g><title>_start (2,228 samples, 100.00%)</title><rect x="0.0000%" y="1269" width="100.0000%" height="15" fill="rgb(245,79,54)" fg:x="0" fg:w="2228"/><text x="0.2500%" y="1279.50">_start</text></g><g><title>__libc_start_main (2,228 samples, 100.00%)</title><rect x="0.0000%" y="1253" width="100.0000%" height="15" fill="rgb(240,10,37)" fg:x="0" fg:w="2228"/><text x="0.2500%" y="1263.50">__libc_start_main</text></g><g><title>[libc.so.6] (2,228 samples, 100.00%)</title><rect x="0.0000%" y="1237" width="100.0000%" height="15" fill="rgb(214,192,32)" fg:x="0" fg:w="2228"/><text x="0.2500%" y="1247.50">[libc.so.6]</text></g><g><title>main (2,228 samples, 100.00%)</title><rect x="0.0000%" y="1221" width="100.0000%" height="15" fill="rgb(209,36,54)" fg:x="0" fg:w="2228"/><text x="0.2500%" y="1231.50">main</text></g><g><title>std::rt::lang_start_internal (2,228 samples, 100.00%)</title><rect x="0.0000%" y="1205" width="100.0000%" height="15" fill="rgb(220,10,11)" fg:x="0" fg:w="2228"/><text x="0.2500%" y="1215.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (2,228 samples, 100.00%)</title><rect x="0.0000%" y="1189" width="100.0000%" height="15" fill="rgb(221,106,17)" fg:x="0" fg:w="2228"/><text x="0.2500%" y="1199.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (2,228 samples, 100.00%)</title><rect x="0.0000%" y="1173" width="100.0000%" height="15" fill="rgb(251,142,44)" fg:x="0" fg:w="2228"/><text x="0.2500%" y="1183.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (2,228 samples, 100.00%)</title><rect x="0.0000%" y="1157" width="100.0000%" height="15" fill="rgb(238,13,15)" fg:x="0" fg:w="2228"/><text x="0.2500%" y="1167.50">std::panicking::try::do_call</text></g><g><title>std::rt::lang_start_internal::{{closure}} (2,228 samples, 100.00%)</title><rect x="0.0000%" y="1141" width="100.0000%" height="15" fill="rgb(208,107,27)" fg:x="0" fg:w="2228"/><text x="0.2500%" y="1151.50">std::rt::lang_start_internal::{{closure}}</text></g><g><title>std::panic::catch_unwind (2,228 samples, 100.00%)</title><rect x="0.0000%" y="1125" width="100.0000%" height="15" fill="rgb(205,136,37)" fg:x="0" fg:w="2228"/><text x="0.2500%" y="1135.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (2,228 samples, 100.00%)</title><rect x="0.0000%" y="1109" width="100.0000%" height="15" fill="rgb(250,205,27)" fg:x="0" fg:w="2228"/><text x="0.2500%" y="1119.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (2,228 samples, 100.00%)</title><rect x="0.0000%" y="1093" width="100.0000%" height="15" fill="rgb(210,80,43)" fg:x="0" fg:w="2228"/><text x="0.2500%" y="1103.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (2,228 samples, 100.00%)</title><rect x="0.0000%" y="1077" width="100.0000%" height="15" fill="rgb(247,160,36)" fg:x="0" fg:w="2228"/><text x="0.2500%" y="1087.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once</text></g><g><title>std::rt::lang_start::{{closure}} (2,228 samples, 100.00%)</title><rect x="0.0000%" y="1061" width="100.0000%" height="15" fill="rgb(234,13,49)" fg:x="0" fg:w="2228"/><text x="0.2500%" y="1071.50">std::rt::lang_start::{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (2,228 samples, 100.00%)</title><rect x="0.0000%" y="1045" width="100.0000%" height="15" fill="rgb(234,122,0)" fg:x="0" fg:w="2228"/><text x="0.2500%" y="1055.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>core::ops::function::FnOnce::call_once (2,228 samples, 100.00%)</title><rect x="0.0000%" y="1029" width="100.0000%" height="15" fill="rgb(207,146,38)" fg:x="0" fg:w="2228"/><text x="0.2500%" y="1039.50">core::ops::function::FnOnce::call_once</text></g><g><title>ahc032_a::main (2,228 samples, 100.00%)</title><rect x="0.0000%" y="1013" width="100.0000%" height="15" fill="rgb(207,177,25)" fg:x="0" fg:w="2228"/><text x="0.2500%" y="1023.50">ahc032_a::main</text></g><g><title>ahc032_a::solve (2,227 samples, 99.96%)</title><rect x="0.0449%" y="997" width="99.9551%" height="15" fill="rgb(211,178,42)" fg:x="1" fg:w="2227"/><text x="0.2949%" y="1007.50">ahc032_a::solve</text></g><g><title>ahc032_a::beam (2,227 samples, 99.96%)</title><rect x="0.0449%" y="981" width="99.9551%" height="15" fill="rgb(230,69,54)" fg:x="1" fg:w="2227"/><text x="0.2949%" y="991.50">ahc032_a::beam</text></g><g><title>core::slice::&lt;impl [T]&gt;::select_nth_unstable_by_key (441 samples, 19.79%)</title><rect x="80.2065%" y="965" width="19.7935%" height="15" fill="rgb(214,135,41)" fg:x="1787" fg:w="441"/><text x="80.4565%" y="975.50">core::slice::&lt;impl [T]&gt;::select..</text></g><g><title>core::slice::select::partition_at_index (441 samples, 19.79%)</title><rect x="80.2065%" y="949" width="19.7935%" height="15" fill="rgb(237,67,25)" fg:x="1787" fg:w="441"/><text x="80.4565%" y="959.50">core::slice::select::partition_..</text></g><g><title>core::slice::select::partition_at_index_loop (441 samples, 19.79%)</title><rect x="80.2065%" y="933" width="19.7935%" height="15" fill="rgb(222,189,50)" fg:x="1787" fg:w="441"/><text x="80.4565%" y="943.50">core::slice::select::partition_..</text></g><g><title>core::slice::sort::partition (394 samples, 17.68%)</title><rect x="82.3160%" y="917" width="17.6840%" height="15" fill="rgb(245,148,34)" fg:x="1834" fg:w="394"/><text x="82.5660%" y="927.50">core::slice::sort::partition</text></g><g><title>core::slice::sort::partition_in_blocks (394 samples, 17.68%)</title><rect x="82.3160%" y="901" width="17.6840%" height="15" fill="rgb(222,29,6)" fg:x="1834" fg:w="394"/><text x="82.5660%" y="911.50">core::slice::sort::partitio..</text></g><g><title>core::slice::sort::partition_in_blocks::width (1 samples, 0.04%)</title><rect x="99.9551%" y="885" width="0.0449%" height="15" fill="rgb(221,189,43)" fg:x="2227" fg:w="1"/><text x="100.2051%" y="895.50"></text></g></svg></svg>