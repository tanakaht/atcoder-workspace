# 分布対応:YES と書いてあるものは
# [0,1)の一様分布に従う変数xを入力とした式を指定できる。
# また、項目ごとに固定で与えられる乱数 g (これも[0,1)の一様分布) も利用可能。
# 設定値を配列に入れて複数記述すると、それらの中からランダム(or 全組み合わせの中で昇順)で選ばれる。この選択も項目ごとに固定である。
# 設定値が1つの場合配列に格納せずに記述できる。ただし、設定値自体が配列の場合は必ず配列に格納する必要がある。(二重配列になる)
# 大半の設定項目で定数としてT_max,worker_num,map_max_depthが利用できる。
# (処理順:T_max, worker_num, map_max_depth, その他)
# 例:
# "x": [0,1)の一様分布
# "1+10*x": [1,11)の一様分布。
# "2.0**(10*x)":ある種の指数的な分布
# "1.0": 定数1.0
# 1.0: 定数1.0 (単なる数値の場合文字列として指定しなくても良い)
# "1.0-2.0*g": [-1.0,1.0)の一様分布だが、その値はテストケース生成過程を通して変化しない。
# "1.0-2.0*g-1.0*x": [-1.0,1.0)の一様分布(固定) - [0.0,1.0)の一様分布(評価の度に変化)
# [1.0,2.0]: 定数1.0 または 定数2.0 が選ばれる。選ばれる要素はテストケース生成過程を通して変化しない。
# ["1.0+2.0*g+1.0*x",10.0,"20.0+8.0*g"]: [1,3)の一様分布(固定)+[0,1)の一様分布(評価の度に変化) または 定数10.0 または [20,28)の一様分布(固定)。選ばれる要素はテストケース生成過程を通して変化しない。
# "T_max*(9.0+x)":[T_max*9.0,T_max*10.0)の一様分布
# "T_max*worker_num/2*x":[0,T_max*worker_num/2)の一様分布
# ["T_max*(x**0.5)","T_max*(x**1.5)"]: T_maxに依存した分布2つ

#  問題のタイプ(A問題,B問題)
#
#  型:文字列
#  値の範囲:"A" or "B"
#  分布対応:NO
type = "A"

#  シード値
#
#  型:整数
#  値の範囲:0 以上 2^64-1 以下
#  分布対応:NO
seed = <seed_num>

#  最終時刻(1-based)
#
#  型:整数
#  値の範囲:1以上
#  分布対応:YES
T_max = [300, 700, 1000]

#  マップサイズ
#
#  型:整数
#  値の範囲:2のべき乗(1,2,4,...,2^n,...)
#  分布対応:YES
map_size = 2048

#  マップ分割率(ノード分割数の理論最大値に対する比率)
#
#  型:実数
#  値の範囲:0以上1以下
#  分布対応:YES
map_node_ratio = "0.45*(0.5**where(map_max_depth>5,map_max_depth-5,0))"

#  マップ最大再帰深度
#
#  型:整数
#  値の範囲:1以上
#  分布対応:YES
map_max_depth = [5, 6, 7]

#  単位距離
#  (生成されたマップをノード間距離の最小値がこの値になるようにスケーリングする)
#
#  型:整数
#  値の範囲:1以上
#  分布対応:YES
unit_dist = 1

#  頂点数のハードリミット[下限,上限](端点含む)
#
#  型:[整数,整数]
#  値の範囲:[1,inf)に含まれる
#  分布対応:YES
map_vertex_num_hard_limit = [[150,2000]]

#  辺の数のハードリミット(頂点数に対する係数で表現)[下限,上限](端点含む)
#
#  型:[非負実数,非負実数]
#  値の範囲:[0,inf)に含まれる
#  分布対応:YES
map_edge_num_hard_limit_coeff = [[1.33333333333333, 2.0]]

#  ワーカー数
#
#  型:整数
#  値の範囲:1以上
#  分布対応:YES
worker_num = [1, 2, 5, 10]

#  ワーカーが処理可能なタイプの個数
#
#  型:整数
#  値の範囲:1以上
#  分布対応:YES
worker_processable_num = "1+3*x"

#  ワーカーが処理可能なタイプ(0-based)
#
#  型:整数
#  値の範囲:0以上
#  分布対応:YES
worker_processable_type = "3*x"

#  ワーカーの単位時間の最大タスク実行数
#
#  型:整数
#  値の範囲:1以上
#  分布対応:YES
worker_max_task_processing_num = "30+71*x"

#  全ジョブの数
#
#  型:整数
#  値の範囲:1以上
#  分布対応:YES
job_num = [250, 500, 1000]

#  ジョブのタイプ分布(0-based)
#
#  型:整数
#  値の範囲:0以上
#  分布対応:YES
job_type = "3*x"

#  必要タスク数の範囲
#
#  型:整数
#  値の範囲:1以上
#  分布対応:YES
task_num = "500+1000*x"

#  ジョブ未完了ペナルティの範囲
#
#  型:実数
#  値の範囲:0以上1以下
#  分布対応:YES
job_unfinished_penalty = ["0.98+0.02*x", "0.91+0.02*x"]

#  必須ジョブ数の範囲
#
#  型:整数
#  値の範囲:0以上
#  分布対応:YES
mandatory_job_num = "worker_num*T_max/300*x"

#  報酬関数の制御点間隔
#
#  型:整数
#  値の範囲:1以上
#  分布対応:YES
reward_interval = 25

#  報酬関数が正である区間長さ
#
#  型:整数
#  値の範囲:1以上
#  分布対応:YES
reward_duration = "(T_max-100+1)*x+100"

#  報酬関数の標準偏差
#
#  型:実数
#  値の範囲:0以上
#  分布対応:YES
reward_stddev = "0.3+0.08*x"

#  報酬関数の値の大きさの目安
#  (正確には、sqrt(制御点の値の2乗平均) の値)
#
#  型:実数
#  値の範囲:0以上
#  分布対応:YES
reward_value = "1000000+1000001*x"

#  報酬関数の値の上限
#
#  型:整数
#  値の範囲:1以上
#  分布対応:YES
reward_upper_hard_limit = 10000000

#  報酬関数の値の下限
#
#  型:整数
#  値の範囲:1以上
#  分布対応:YES
reward_lower_hard_limit = 1

#  基本天候区間の長さ(T_maxを割り切らない場合取り直す。1を含まない場合T_maxの素因数に注意)
#
#  型:整数
#  値の範囲:1以上
#  分布対応:YES
fundamental_weather_interval_length = "5+16*x"

#  依存関係の連結成分の大きさ
#
#  型:整数
#  値の範囲:1以上
#  分布対応:YES
job_dependency_num = "5*x"

#  1つのジョブが依存するジョブの最大個数
#
#  型:整数
#  値の範囲:0以上
#  分布対応:YES
job_max_dep = 3

#  マップの切断面積比
#
#  型:実数
#  値の範囲:0以上1以下
#  分布対応:YES
map_area_ratio = "0.3+0.4*x"

#  マップの地形生成における山の頂点の数
#
#  型:整数
#  値の範囲:1以上
#  分布対応:YES
map_peak_num = 20

#  スケジュールペナルティ最大値
#
#  型:実数
#  値の範囲:0以上1以下
#  分布対応:YES
schedule_penalty_max = "0.005+0.02*x"

#  スケジュールペナルティ減衰率
#
#  型:実数
#  値の範囲:0以上1以下
#  分布対応:YES
schedule_penalty_decay = "1-0.001*(30.0)**x"

#  スケジュールスコア係数
#
#  型:実数
#  値の範囲:0以上
#  分布対応:YES
schedule_score_scale = "5**(-1+2*x)"

#  天候依存度
#
#  型:実数
#  値の範囲:0以上1以下
#  分布対応:YES
weather_dependency = "0.15*x"

#  天候の定常分布(正規化前) 各要素は分布で記述可能。
#  定常分布が一つしかなくても、その定常分布を配列に格納すること。
#  ([定常分布1,定常分布2,...,定常分布n]の形を強制する。定常分布自体が配列なので、他の設定項目と異なり定常分布1しかなくても[定常分布1]と記述する。)
#
#  型:実数の配列
#  値の範囲:各要素は0以上
#  分布対応:YES
weather_stationary_dist = [[
  0.21,
  0.25,
  0.10,
  0.31,
  0.102,
  0.023,
  0.005,
]]

#  天候確率行列について、対角成分からこの値より離れた位置の要素を0.0にする
#  (=この設定値をnとして、(1+2n)重対角行列に確率行列を制限する)
#
#  型:整数
#  値の範囲:0以上
#  分布対応:YES
weather_prob_nondiag_cutoff_range = 2

#  天候確率行列の成分(i,j)について
#  この設定値をqとして、初期値にexp(-q*|i-j|^2)で重み付けする
#  (最終的に生成される確率行列は初期値にかなり近い形になるので、このqを大きくすると自己遷移が増える)
#
#  型:実数
#  値の範囲:0以上
#  分布対応:YES
weather_prob_sharpness = [2.0,1.5,1.0]

#  天候確率行列の収束判定基準等に使われる微小値
#  目安:1e-12 ～ 1e-6
#  (マシンイプシロン(2.220446049250313e-16)より小さくしないこと。)
#
#  小さいと計算に時間がかかる場合があるが、収束すれば精度の良い行列が生成される。
#  大きくすると計算は早いが、定常分布が指定したものと大きくずれた行列が生成される可能性がある。
#
#  型:実数
#  値の範囲:2.220446049250313e-16 以上 1.0 未満
#  分布対応:YES
weather_prob_eps = 1e-8

#  天候確率行列を、対角成分が最大になるように制限する
#
#  型:真偽値
#  値の範囲:true or false
#  分布対応:NO
weather_prob_centralize = true

#  天候制限定数(d^weatherの冪)
#
#  型:整数の列
#  値の範囲:各要素は0以上。要素数は定常分布の要素数と等しい必要がある。
#  分布対応:YES
weather_limit_const = [[
  0,
  1,
  2,
  3,
  10,
  14,
  20,
]]
